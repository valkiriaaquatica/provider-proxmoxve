//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUObservation) DeepCopyInto(out *CPUObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = make([]FlagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Units != nil {
		in, out := &in.Units, &out.Units
		*out = new(float64)
		**out = **in
	}
	if in.Vcores != nil {
		in, out := &in.Vcores, &out.Vcores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUObservation.
func (in *CPUObservation) DeepCopy() *CPUObservation {
	if in == nil {
		return nil
	}
	out := new(CPUObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUParameters) DeepCopyInto(out *CPUParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = make([]FlagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Units != nil {
		in, out := &in.Units, &out.Units
		*out = new(float64)
		**out = **in
	}
	if in.Vcores != nil {
		in, out := &in.Vcores, &out.Vcores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUParameters.
func (in *CPUParameters) DeepCopy() *CPUParameters {
	if in == nil {
		return nil
	}
	out := new(CPUParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromObservation) DeepCopyInto(out *CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromObservation.
func (in *CdromObservation) DeepCopy() *CdromObservation {
	if in == nil {
		return nil
	}
	out := new(CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromParameters) DeepCopyInto(out *CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromParameters.
func (in *CdromParameters) DeepCopy() *CdromParameters {
	if in == nil {
		return nil
	}
	out := new(CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudinitObservation) DeepCopyInto(out *CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudinitObservation.
func (in *CloudinitObservation) DeepCopy() *CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudinitParameters) DeepCopyInto(out *CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudinitParameters.
func (in *CloudinitParameters) DeepCopy() *CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceObservation) DeepCopyInto(out *DeviceObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceObservation.
func (in *DeviceObservation) DeepCopy() *DeviceObservation {
	if in == nil {
		return nil
	}
	out := new(DeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceParameters) DeepCopyInto(out *DeviceParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceParameters.
func (in *DeviceParameters) DeepCopy() *DeviceParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.DiskFile != nil {
		in, out := &in.DiskFile, &out.DiskFile
		*out = new(string)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Slot != nil {
		in, out := &in.Slot, &out.Slot
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.DiskFile != nil {
		in, out := &in.DiskFile, &out.DiskFile
		*out = new(string)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Slot != nil {
		in, out := &in.Slot, &out.Slot
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisksObservation) DeepCopyInto(out *DisksObservation) {
	*out = *in
	if in.Ide != nil {
		in, out := &in.Ide, &out.Ide
		*out = make([]IdeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata != nil {
		in, out := &in.Sata, &out.Sata
		*out = make([]SataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi != nil {
		in, out := &in.Scsi, &out.Scsi
		*out = make([]ScsiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio != nil {
		in, out := &in.Virtio, &out.Virtio
		*out = make([]VirtioObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisksObservation.
func (in *DisksObservation) DeepCopy() *DisksObservation {
	if in == nil {
		return nil
	}
	out := new(DisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisksParameters) DeepCopyInto(out *DisksParameters) {
	*out = *in
	if in.Ide != nil {
		in, out := &in.Ide, &out.Ide
		*out = make([]IdeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata != nil {
		in, out := &in.Sata, &out.Sata
		*out = make([]SataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi != nil {
		in, out := &in.Scsi, &out.Scsi
		*out = make([]ScsiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio != nil {
		in, out := &in.Virtio, &out.Virtio
		*out = make([]VirtioParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisksParameters.
func (in *DisksParameters) DeepCopy() *DisksParameters {
	if in == nil {
		return nil
	}
	out := new(DisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfidiskObservation) DeepCopyInto(out *EfidiskObservation) {
	*out = *in
	if in.Efitype != nil {
		in, out := &in.Efitype, &out.Efitype
		*out = new(string)
		**out = **in
	}
	if in.PreEnrolledKeys != nil {
		in, out := &in.PreEnrolledKeys, &out.PreEnrolledKeys
		*out = new(bool)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfidiskObservation.
func (in *EfidiskObservation) DeepCopy() *EfidiskObservation {
	if in == nil {
		return nil
	}
	out := new(EfidiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfidiskParameters) DeepCopyInto(out *EfidiskParameters) {
	*out = *in
	if in.Efitype != nil {
		in, out := &in.Efitype, &out.Efitype
		*out = new(string)
		**out = **in
	}
	if in.PreEnrolledKeys != nil {
		in, out := &in.PreEnrolledKeys, &out.PreEnrolledKeys
		*out = new(bool)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfidiskParameters.
func (in *EfidiskParameters) DeepCopy() *EfidiskParameters {
	if in == nil {
		return nil
	}
	out := new(EfidiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlagsObservation) DeepCopyInto(out *FlagsObservation) {
	*out = *in
	if in.Aes != nil {
		in, out := &in.Aes, &out.Aes
		*out = new(string)
		**out = **in
	}
	if in.AmdNoSsb != nil {
		in, out := &in.AmdNoSsb, &out.AmdNoSsb
		*out = new(string)
		**out = **in
	}
	if in.AmdSsbd != nil {
		in, out := &in.AmdSsbd, &out.AmdSsbd
		*out = new(string)
		**out = **in
	}
	if in.HvEvmcs != nil {
		in, out := &in.HvEvmcs, &out.HvEvmcs
		*out = new(string)
		**out = **in
	}
	if in.HvTlbflush != nil {
		in, out := &in.HvTlbflush, &out.HvTlbflush
		*out = new(string)
		**out = **in
	}
	if in.Ibpb != nil {
		in, out := &in.Ibpb, &out.Ibpb
		*out = new(string)
		**out = **in
	}
	if in.MdClear != nil {
		in, out := &in.MdClear, &out.MdClear
		*out = new(string)
		**out = **in
	}
	if in.Pbpe1Gb != nil {
		in, out := &in.Pbpe1Gb, &out.Pbpe1Gb
		*out = new(string)
		**out = **in
	}
	if in.Pcid != nil {
		in, out := &in.Pcid, &out.Pcid
		*out = new(string)
		**out = **in
	}
	if in.SpecCtrl != nil {
		in, out := &in.SpecCtrl, &out.SpecCtrl
		*out = new(string)
		**out = **in
	}
	if in.Ssbd != nil {
		in, out := &in.Ssbd, &out.Ssbd
		*out = new(string)
		**out = **in
	}
	if in.VirtSsbd != nil {
		in, out := &in.VirtSsbd, &out.VirtSsbd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlagsObservation.
func (in *FlagsObservation) DeepCopy() *FlagsObservation {
	if in == nil {
		return nil
	}
	out := new(FlagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlagsParameters) DeepCopyInto(out *FlagsParameters) {
	*out = *in
	if in.Aes != nil {
		in, out := &in.Aes, &out.Aes
		*out = new(string)
		**out = **in
	}
	if in.AmdNoSsb != nil {
		in, out := &in.AmdNoSsb, &out.AmdNoSsb
		*out = new(string)
		**out = **in
	}
	if in.AmdSsbd != nil {
		in, out := &in.AmdSsbd, &out.AmdSsbd
		*out = new(string)
		**out = **in
	}
	if in.HvEvmcs != nil {
		in, out := &in.HvEvmcs, &out.HvEvmcs
		*out = new(string)
		**out = **in
	}
	if in.HvTlbflush != nil {
		in, out := &in.HvTlbflush, &out.HvTlbflush
		*out = new(string)
		**out = **in
	}
	if in.Ibpb != nil {
		in, out := &in.Ibpb, &out.Ibpb
		*out = new(string)
		**out = **in
	}
	if in.MdClear != nil {
		in, out := &in.MdClear, &out.MdClear
		*out = new(string)
		**out = **in
	}
	if in.Pbpe1Gb != nil {
		in, out := &in.Pbpe1Gb, &out.Pbpe1Gb
		*out = new(string)
		**out = **in
	}
	if in.Pcid != nil {
		in, out := &in.Pcid, &out.Pcid
		*out = new(string)
		**out = **in
	}
	if in.SpecCtrl != nil {
		in, out := &in.SpecCtrl, &out.SpecCtrl
		*out = new(string)
		**out = **in
	}
	if in.Ssbd != nil {
		in, out := &in.Ssbd, &out.Ssbd
		*out = new(string)
		**out = **in
	}
	if in.VirtSsbd != nil {
		in, out := &in.VirtSsbd, &out.VirtSsbd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlagsParameters.
func (in *FlagsParameters) DeepCopy() *FlagsParameters {
	if in == nil {
		return nil
	}
	out := new(FlagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciObservation) DeepCopyInto(out *HostpciObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(float64)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciObservation.
func (in *HostpciObservation) DeepCopy() *HostpciObservation {
	if in == nil {
		return nil
	}
	out := new(HostpciObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciParameters) DeepCopyInto(out *HostpciParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(float64)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciParameters.
func (in *HostpciParameters) DeepCopy() *HostpciParameters {
	if in == nil {
		return nil
	}
	out := new(HostpciParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0DiskObservation) DeepCopyInto(out *Ide0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0DiskObservation.
func (in *Ide0DiskObservation) DeepCopy() *Ide0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0DiskParameters) DeepCopyInto(out *Ide0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0DiskParameters.
func (in *Ide0DiskParameters) DeepCopy() *Ide0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0Observation) DeepCopyInto(out *Ide0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0Observation.
func (in *Ide0Observation) DeepCopy() *Ide0Observation {
	if in == nil {
		return nil
	}
	out := new(Ide0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0Parameters) DeepCopyInto(out *Ide0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0Parameters.
func (in *Ide0Parameters) DeepCopy() *Ide0Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CdromObservation) DeepCopyInto(out *Ide1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CdromObservation.
func (in *Ide1CdromObservation) DeepCopy() *Ide1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CdromParameters) DeepCopyInto(out *Ide1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CdromParameters.
func (in *Ide1CdromParameters) DeepCopy() *Ide1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CloudinitObservation) DeepCopyInto(out *Ide1CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CloudinitObservation.
func (in *Ide1CloudinitObservation) DeepCopy() *Ide1CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CloudinitParameters) DeepCopyInto(out *Ide1CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CloudinitParameters.
func (in *Ide1CloudinitParameters) DeepCopy() *Ide1CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1DiskObservation) DeepCopyInto(out *Ide1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1DiskObservation.
func (in *Ide1DiskObservation) DeepCopy() *Ide1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1DiskParameters) DeepCopyInto(out *Ide1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1DiskParameters.
func (in *Ide1DiskParameters) DeepCopy() *Ide1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1Observation) DeepCopyInto(out *Ide1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide1CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1Observation.
func (in *Ide1Observation) DeepCopy() *Ide1Observation {
	if in == nil {
		return nil
	}
	out := new(Ide1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1Parameters) DeepCopyInto(out *Ide1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide1CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1Parameters.
func (in *Ide1Parameters) DeepCopy() *Ide1Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1PassthroughObservation) DeepCopyInto(out *Ide1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1PassthroughObservation.
func (in *Ide1PassthroughObservation) DeepCopy() *Ide1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1PassthroughParameters) DeepCopyInto(out *Ide1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1PassthroughParameters.
func (in *Ide1PassthroughParameters) DeepCopy() *Ide1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CdromObservation) DeepCopyInto(out *Ide2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CdromObservation.
func (in *Ide2CdromObservation) DeepCopy() *Ide2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CdromParameters) DeepCopyInto(out *Ide2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CdromParameters.
func (in *Ide2CdromParameters) DeepCopy() *Ide2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CloudinitObservation) DeepCopyInto(out *Ide2CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CloudinitObservation.
func (in *Ide2CloudinitObservation) DeepCopy() *Ide2CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CloudinitParameters) DeepCopyInto(out *Ide2CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CloudinitParameters.
func (in *Ide2CloudinitParameters) DeepCopy() *Ide2CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2DiskObservation) DeepCopyInto(out *Ide2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2DiskObservation.
func (in *Ide2DiskObservation) DeepCopy() *Ide2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2DiskParameters) DeepCopyInto(out *Ide2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2DiskParameters.
func (in *Ide2DiskParameters) DeepCopy() *Ide2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2Observation) DeepCopyInto(out *Ide2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide2CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2Observation.
func (in *Ide2Observation) DeepCopy() *Ide2Observation {
	if in == nil {
		return nil
	}
	out := new(Ide2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2Parameters) DeepCopyInto(out *Ide2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide2CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2Parameters.
func (in *Ide2Parameters) DeepCopy() *Ide2Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2PassthroughObservation) DeepCopyInto(out *Ide2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2PassthroughObservation.
func (in *Ide2PassthroughObservation) DeepCopy() *Ide2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2PassthroughParameters) DeepCopyInto(out *Ide2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2PassthroughParameters.
func (in *Ide2PassthroughParameters) DeepCopy() *Ide2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CdromObservation) DeepCopyInto(out *Ide3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CdromObservation.
func (in *Ide3CdromObservation) DeepCopy() *Ide3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CdromParameters) DeepCopyInto(out *Ide3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CdromParameters.
func (in *Ide3CdromParameters) DeepCopy() *Ide3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CloudinitObservation) DeepCopyInto(out *Ide3CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CloudinitObservation.
func (in *Ide3CloudinitObservation) DeepCopy() *Ide3CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CloudinitParameters) DeepCopyInto(out *Ide3CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CloudinitParameters.
func (in *Ide3CloudinitParameters) DeepCopy() *Ide3CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3DiskObservation) DeepCopyInto(out *Ide3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3DiskObservation.
func (in *Ide3DiskObservation) DeepCopy() *Ide3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3DiskParameters) DeepCopyInto(out *Ide3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3DiskParameters.
func (in *Ide3DiskParameters) DeepCopy() *Ide3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3Observation) DeepCopyInto(out *Ide3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide3CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3Observation.
func (in *Ide3Observation) DeepCopy() *Ide3Observation {
	if in == nil {
		return nil
	}
	out := new(Ide3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3Parameters) DeepCopyInto(out *Ide3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide3CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3Parameters.
func (in *Ide3Parameters) DeepCopy() *Ide3Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3PassthroughObservation) DeepCopyInto(out *Ide3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3PassthroughObservation.
func (in *Ide3PassthroughObservation) DeepCopy() *Ide3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3PassthroughParameters) DeepCopyInto(out *Ide3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3PassthroughParameters.
func (in *Ide3PassthroughParameters) DeepCopy() *Ide3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdeObservation) DeepCopyInto(out *IdeObservation) {
	*out = *in
	if in.Ide0 != nil {
		in, out := &in.Ide0, &out.Ide0
		*out = make([]Ide0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide1 != nil {
		in, out := &in.Ide1, &out.Ide1
		*out = make([]Ide1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide2 != nil {
		in, out := &in.Ide2, &out.Ide2
		*out = make([]Ide2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide3 != nil {
		in, out := &in.Ide3, &out.Ide3
		*out = make([]Ide3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdeObservation.
func (in *IdeObservation) DeepCopy() *IdeObservation {
	if in == nil {
		return nil
	}
	out := new(IdeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdeParameters) DeepCopyInto(out *IdeParameters) {
	*out = *in
	if in.Ide0 != nil {
		in, out := &in.Ide0, &out.Ide0
		*out = make([]Ide0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide1 != nil {
		in, out := &in.Ide1, &out.Ide1
		*out = make([]Ide1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide2 != nil {
		in, out := &in.Ide2, &out.Ide2
		*out = make([]Ide2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide3 != nil {
		in, out := &in.Ide3, &out.Ide3
		*out = make([]Ide3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdeParameters.
func (in *IdeParameters) DeepCopy() *IdeParameters {
	if in == nil {
		return nil
	}
	out := new(IdeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingObservation) DeepCopyInto(out *MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingObservation.
func (in *MappingObservation) DeepCopy() *MappingObservation {
	if in == nil {
		return nil
	}
	out := new(MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingParameters) DeepCopyInto(out *MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingParameters.
func (in *MappingParameters) DeepCopy() *MappingParameters {
	if in == nil {
		return nil
	}
	out := new(MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.LinkDown != nil {
		in, out := &in.LinkDown, &out.LinkDown
		*out = new(bool)
		**out = **in
	}
	if in.Macaddr != nil {
		in, out := &in.Macaddr, &out.Macaddr
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.Rate != nil {
		in, out := &in.Rate, &out.Rate
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.LinkDown != nil {
		in, out := &in.LinkDown, &out.LinkDown
		*out = new(bool)
		**out = **in
	}
	if in.Macaddr != nil {
		in, out := &in.Macaddr, &out.Macaddr
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.Rate != nil {
		in, out := &in.Rate, &out.Rate
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PassthroughObservation) DeepCopyInto(out *PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PassthroughObservation.
func (in *PassthroughObservation) DeepCopy() *PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PassthroughParameters) DeepCopyInto(out *PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PassthroughParameters.
func (in *PassthroughParameters) DeepCopy() *PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci0Observation) DeepCopyInto(out *Pci0Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci0Observation.
func (in *Pci0Observation) DeepCopy() *Pci0Observation {
	if in == nil {
		return nil
	}
	out := new(Pci0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci0Parameters) DeepCopyInto(out *Pci0Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci0Parameters.
func (in *Pci0Parameters) DeepCopy() *Pci0Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci10MappingObservation) DeepCopyInto(out *Pci10MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci10MappingObservation.
func (in *Pci10MappingObservation) DeepCopy() *Pci10MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci10MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci10MappingParameters) DeepCopyInto(out *Pci10MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci10MappingParameters.
func (in *Pci10MappingParameters) DeepCopy() *Pci10MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci10MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci10Observation) DeepCopyInto(out *Pci10Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci10MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci10RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci10Observation.
func (in *Pci10Observation) DeepCopy() *Pci10Observation {
	if in == nil {
		return nil
	}
	out := new(Pci10Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci10Parameters) DeepCopyInto(out *Pci10Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci10MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci10RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci10Parameters.
func (in *Pci10Parameters) DeepCopy() *Pci10Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci10Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci10RawObservation) DeepCopyInto(out *Pci10RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci10RawObservation.
func (in *Pci10RawObservation) DeepCopy() *Pci10RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci10RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci10RawParameters) DeepCopyInto(out *Pci10RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci10RawParameters.
func (in *Pci10RawParameters) DeepCopy() *Pci10RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci10RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci11MappingObservation) DeepCopyInto(out *Pci11MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci11MappingObservation.
func (in *Pci11MappingObservation) DeepCopy() *Pci11MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci11MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci11MappingParameters) DeepCopyInto(out *Pci11MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci11MappingParameters.
func (in *Pci11MappingParameters) DeepCopy() *Pci11MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci11MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci11Observation) DeepCopyInto(out *Pci11Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci11MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci11RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci11Observation.
func (in *Pci11Observation) DeepCopy() *Pci11Observation {
	if in == nil {
		return nil
	}
	out := new(Pci11Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci11Parameters) DeepCopyInto(out *Pci11Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci11MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci11RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci11Parameters.
func (in *Pci11Parameters) DeepCopy() *Pci11Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci11Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci11RawObservation) DeepCopyInto(out *Pci11RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci11RawObservation.
func (in *Pci11RawObservation) DeepCopy() *Pci11RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci11RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci11RawParameters) DeepCopyInto(out *Pci11RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci11RawParameters.
func (in *Pci11RawParameters) DeepCopy() *Pci11RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci11RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci12MappingObservation) DeepCopyInto(out *Pci12MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci12MappingObservation.
func (in *Pci12MappingObservation) DeepCopy() *Pci12MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci12MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci12MappingParameters) DeepCopyInto(out *Pci12MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci12MappingParameters.
func (in *Pci12MappingParameters) DeepCopy() *Pci12MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci12MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci12Observation) DeepCopyInto(out *Pci12Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci12MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci12RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci12Observation.
func (in *Pci12Observation) DeepCopy() *Pci12Observation {
	if in == nil {
		return nil
	}
	out := new(Pci12Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci12Parameters) DeepCopyInto(out *Pci12Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci12MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci12RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci12Parameters.
func (in *Pci12Parameters) DeepCopy() *Pci12Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci12Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci12RawObservation) DeepCopyInto(out *Pci12RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci12RawObservation.
func (in *Pci12RawObservation) DeepCopy() *Pci12RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci12RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci12RawParameters) DeepCopyInto(out *Pci12RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci12RawParameters.
func (in *Pci12RawParameters) DeepCopy() *Pci12RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci12RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci13MappingObservation) DeepCopyInto(out *Pci13MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci13MappingObservation.
func (in *Pci13MappingObservation) DeepCopy() *Pci13MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci13MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci13MappingParameters) DeepCopyInto(out *Pci13MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci13MappingParameters.
func (in *Pci13MappingParameters) DeepCopy() *Pci13MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci13MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci13Observation) DeepCopyInto(out *Pci13Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci13MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci13RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci13Observation.
func (in *Pci13Observation) DeepCopy() *Pci13Observation {
	if in == nil {
		return nil
	}
	out := new(Pci13Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci13Parameters) DeepCopyInto(out *Pci13Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci13MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci13RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci13Parameters.
func (in *Pci13Parameters) DeepCopy() *Pci13Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci13Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci13RawObservation) DeepCopyInto(out *Pci13RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci13RawObservation.
func (in *Pci13RawObservation) DeepCopy() *Pci13RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci13RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci13RawParameters) DeepCopyInto(out *Pci13RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci13RawParameters.
func (in *Pci13RawParameters) DeepCopy() *Pci13RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci13RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci14MappingObservation) DeepCopyInto(out *Pci14MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci14MappingObservation.
func (in *Pci14MappingObservation) DeepCopy() *Pci14MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci14MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci14MappingParameters) DeepCopyInto(out *Pci14MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci14MappingParameters.
func (in *Pci14MappingParameters) DeepCopy() *Pci14MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci14MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci14Observation) DeepCopyInto(out *Pci14Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci14MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci14RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci14Observation.
func (in *Pci14Observation) DeepCopy() *Pci14Observation {
	if in == nil {
		return nil
	}
	out := new(Pci14Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci14Parameters) DeepCopyInto(out *Pci14Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci14MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci14RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci14Parameters.
func (in *Pci14Parameters) DeepCopy() *Pci14Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci14Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci14RawObservation) DeepCopyInto(out *Pci14RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci14RawObservation.
func (in *Pci14RawObservation) DeepCopy() *Pci14RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci14RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci14RawParameters) DeepCopyInto(out *Pci14RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci14RawParameters.
func (in *Pci14RawParameters) DeepCopy() *Pci14RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci14RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci1MappingObservation) DeepCopyInto(out *Pci1MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci1MappingObservation.
func (in *Pci1MappingObservation) DeepCopy() *Pci1MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci1MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci1MappingParameters) DeepCopyInto(out *Pci1MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci1MappingParameters.
func (in *Pci1MappingParameters) DeepCopy() *Pci1MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci1MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci1Observation) DeepCopyInto(out *Pci1Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci1MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci1RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci1Observation.
func (in *Pci1Observation) DeepCopy() *Pci1Observation {
	if in == nil {
		return nil
	}
	out := new(Pci1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci1Parameters) DeepCopyInto(out *Pci1Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci1MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci1RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci1Parameters.
func (in *Pci1Parameters) DeepCopy() *Pci1Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci1RawObservation) DeepCopyInto(out *Pci1RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci1RawObservation.
func (in *Pci1RawObservation) DeepCopy() *Pci1RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci1RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci1RawParameters) DeepCopyInto(out *Pci1RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci1RawParameters.
func (in *Pci1RawParameters) DeepCopy() *Pci1RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci1RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci2MappingObservation) DeepCopyInto(out *Pci2MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci2MappingObservation.
func (in *Pci2MappingObservation) DeepCopy() *Pci2MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci2MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci2MappingParameters) DeepCopyInto(out *Pci2MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci2MappingParameters.
func (in *Pci2MappingParameters) DeepCopy() *Pci2MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci2MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci2Observation) DeepCopyInto(out *Pci2Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci2MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci2RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci2Observation.
func (in *Pci2Observation) DeepCopy() *Pci2Observation {
	if in == nil {
		return nil
	}
	out := new(Pci2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci2Parameters) DeepCopyInto(out *Pci2Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci2MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci2RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci2Parameters.
func (in *Pci2Parameters) DeepCopy() *Pci2Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci2RawObservation) DeepCopyInto(out *Pci2RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci2RawObservation.
func (in *Pci2RawObservation) DeepCopy() *Pci2RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci2RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci2RawParameters) DeepCopyInto(out *Pci2RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci2RawParameters.
func (in *Pci2RawParameters) DeepCopy() *Pci2RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci2RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci3MappingObservation) DeepCopyInto(out *Pci3MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci3MappingObservation.
func (in *Pci3MappingObservation) DeepCopy() *Pci3MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci3MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci3MappingParameters) DeepCopyInto(out *Pci3MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci3MappingParameters.
func (in *Pci3MappingParameters) DeepCopy() *Pci3MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci3MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci3Observation) DeepCopyInto(out *Pci3Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci3MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci3RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci3Observation.
func (in *Pci3Observation) DeepCopy() *Pci3Observation {
	if in == nil {
		return nil
	}
	out := new(Pci3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci3Parameters) DeepCopyInto(out *Pci3Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci3MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci3RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci3Parameters.
func (in *Pci3Parameters) DeepCopy() *Pci3Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci3RawObservation) DeepCopyInto(out *Pci3RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci3RawObservation.
func (in *Pci3RawObservation) DeepCopy() *Pci3RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci3RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci3RawParameters) DeepCopyInto(out *Pci3RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci3RawParameters.
func (in *Pci3RawParameters) DeepCopy() *Pci3RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci3RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci4MappingObservation) DeepCopyInto(out *Pci4MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci4MappingObservation.
func (in *Pci4MappingObservation) DeepCopy() *Pci4MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci4MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci4MappingParameters) DeepCopyInto(out *Pci4MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci4MappingParameters.
func (in *Pci4MappingParameters) DeepCopy() *Pci4MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci4MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci4Observation) DeepCopyInto(out *Pci4Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci4MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci4RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci4Observation.
func (in *Pci4Observation) DeepCopy() *Pci4Observation {
	if in == nil {
		return nil
	}
	out := new(Pci4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci4Parameters) DeepCopyInto(out *Pci4Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci4MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci4RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci4Parameters.
func (in *Pci4Parameters) DeepCopy() *Pci4Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci4RawObservation) DeepCopyInto(out *Pci4RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci4RawObservation.
func (in *Pci4RawObservation) DeepCopy() *Pci4RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci4RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci4RawParameters) DeepCopyInto(out *Pci4RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci4RawParameters.
func (in *Pci4RawParameters) DeepCopy() *Pci4RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci4RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci5MappingObservation) DeepCopyInto(out *Pci5MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci5MappingObservation.
func (in *Pci5MappingObservation) DeepCopy() *Pci5MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci5MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci5MappingParameters) DeepCopyInto(out *Pci5MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci5MappingParameters.
func (in *Pci5MappingParameters) DeepCopy() *Pci5MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci5MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci5Observation) DeepCopyInto(out *Pci5Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci5MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci5RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci5Observation.
func (in *Pci5Observation) DeepCopy() *Pci5Observation {
	if in == nil {
		return nil
	}
	out := new(Pci5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci5Parameters) DeepCopyInto(out *Pci5Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci5MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci5RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci5Parameters.
func (in *Pci5Parameters) DeepCopy() *Pci5Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci5RawObservation) DeepCopyInto(out *Pci5RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci5RawObservation.
func (in *Pci5RawObservation) DeepCopy() *Pci5RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci5RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci5RawParameters) DeepCopyInto(out *Pci5RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci5RawParameters.
func (in *Pci5RawParameters) DeepCopy() *Pci5RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci5RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci6MappingObservation) DeepCopyInto(out *Pci6MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci6MappingObservation.
func (in *Pci6MappingObservation) DeepCopy() *Pci6MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci6MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci6MappingParameters) DeepCopyInto(out *Pci6MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci6MappingParameters.
func (in *Pci6MappingParameters) DeepCopy() *Pci6MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci6MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci6Observation) DeepCopyInto(out *Pci6Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci6MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci6RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci6Observation.
func (in *Pci6Observation) DeepCopy() *Pci6Observation {
	if in == nil {
		return nil
	}
	out := new(Pci6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci6Parameters) DeepCopyInto(out *Pci6Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci6MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci6RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci6Parameters.
func (in *Pci6Parameters) DeepCopy() *Pci6Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci6RawObservation) DeepCopyInto(out *Pci6RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci6RawObservation.
func (in *Pci6RawObservation) DeepCopy() *Pci6RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci6RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci6RawParameters) DeepCopyInto(out *Pci6RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci6RawParameters.
func (in *Pci6RawParameters) DeepCopy() *Pci6RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci6RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci7MappingObservation) DeepCopyInto(out *Pci7MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci7MappingObservation.
func (in *Pci7MappingObservation) DeepCopy() *Pci7MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci7MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci7MappingParameters) DeepCopyInto(out *Pci7MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci7MappingParameters.
func (in *Pci7MappingParameters) DeepCopy() *Pci7MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci7MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci7Observation) DeepCopyInto(out *Pci7Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci7MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci7RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci7Observation.
func (in *Pci7Observation) DeepCopy() *Pci7Observation {
	if in == nil {
		return nil
	}
	out := new(Pci7Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci7Parameters) DeepCopyInto(out *Pci7Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci7MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci7RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci7Parameters.
func (in *Pci7Parameters) DeepCopy() *Pci7Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci7Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci7RawObservation) DeepCopyInto(out *Pci7RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci7RawObservation.
func (in *Pci7RawObservation) DeepCopy() *Pci7RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci7RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci7RawParameters) DeepCopyInto(out *Pci7RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci7RawParameters.
func (in *Pci7RawParameters) DeepCopy() *Pci7RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci7RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci8MappingObservation) DeepCopyInto(out *Pci8MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci8MappingObservation.
func (in *Pci8MappingObservation) DeepCopy() *Pci8MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci8MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci8MappingParameters) DeepCopyInto(out *Pci8MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci8MappingParameters.
func (in *Pci8MappingParameters) DeepCopy() *Pci8MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci8MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci8Observation) DeepCopyInto(out *Pci8Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci8MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci8RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci8Observation.
func (in *Pci8Observation) DeepCopy() *Pci8Observation {
	if in == nil {
		return nil
	}
	out := new(Pci8Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci8Parameters) DeepCopyInto(out *Pci8Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci8MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci8RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci8Parameters.
func (in *Pci8Parameters) DeepCopy() *Pci8Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci8Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci8RawObservation) DeepCopyInto(out *Pci8RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci8RawObservation.
func (in *Pci8RawObservation) DeepCopy() *Pci8RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci8RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci8RawParameters) DeepCopyInto(out *Pci8RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci8RawParameters.
func (in *Pci8RawParameters) DeepCopy() *Pci8RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci8RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci9MappingObservation) DeepCopyInto(out *Pci9MappingObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci9MappingObservation.
func (in *Pci9MappingObservation) DeepCopy() *Pci9MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Pci9MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci9MappingParameters) DeepCopyInto(out *Pci9MappingParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci9MappingParameters.
func (in *Pci9MappingParameters) DeepCopy() *Pci9MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Pci9MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci9Observation) DeepCopyInto(out *Pci9Observation) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci9MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci9RawObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci9Observation.
func (in *Pci9Observation) DeepCopy() *Pci9Observation {
	if in == nil {
		return nil
	}
	out := new(Pci9Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci9Parameters) DeepCopyInto(out *Pci9Parameters) {
	*out = *in
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Pci9MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = make([]Pci9RawParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci9Parameters.
func (in *Pci9Parameters) DeepCopy() *Pci9Parameters {
	if in == nil {
		return nil
	}
	out := new(Pci9Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci9RawObservation) DeepCopyInto(out *Pci9RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci9RawObservation.
func (in *Pci9RawObservation) DeepCopy() *Pci9RawObservation {
	if in == nil {
		return nil
	}
	out := new(Pci9RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pci9RawParameters) DeepCopyInto(out *Pci9RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pci9RawParameters.
func (in *Pci9RawParameters) DeepCopy() *Pci9RawParameters {
	if in == nil {
		return nil
	}
	out := new(Pci9RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PciObservation) DeepCopyInto(out *PciObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PciObservation.
func (in *PciObservation) DeepCopy() *PciObservation {
	if in == nil {
		return nil
	}
	out := new(PciObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PciParameters) DeepCopyInto(out *PciParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PciParameters.
func (in *PciParameters) DeepCopy() *PciParameters {
	if in == nil {
		return nil
	}
	out := new(PciParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PcisObservation) DeepCopyInto(out *PcisObservation) {
	*out = *in
	if in.Pci0 != nil {
		in, out := &in.Pci0, &out.Pci0
		*out = make([]Pci0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci1 != nil {
		in, out := &in.Pci1, &out.Pci1
		*out = make([]Pci1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci10 != nil {
		in, out := &in.Pci10, &out.Pci10
		*out = make([]Pci10Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci11 != nil {
		in, out := &in.Pci11, &out.Pci11
		*out = make([]Pci11Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci12 != nil {
		in, out := &in.Pci12, &out.Pci12
		*out = make([]Pci12Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci13 != nil {
		in, out := &in.Pci13, &out.Pci13
		*out = make([]Pci13Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci14 != nil {
		in, out := &in.Pci14, &out.Pci14
		*out = make([]Pci14Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci2 != nil {
		in, out := &in.Pci2, &out.Pci2
		*out = make([]Pci2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci3 != nil {
		in, out := &in.Pci3, &out.Pci3
		*out = make([]Pci3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci4 != nil {
		in, out := &in.Pci4, &out.Pci4
		*out = make([]Pci4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci5 != nil {
		in, out := &in.Pci5, &out.Pci5
		*out = make([]Pci5Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci6 != nil {
		in, out := &in.Pci6, &out.Pci6
		*out = make([]Pci6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci7 != nil {
		in, out := &in.Pci7, &out.Pci7
		*out = make([]Pci7Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci8 != nil {
		in, out := &in.Pci8, &out.Pci8
		*out = make([]Pci8Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci9 != nil {
		in, out := &in.Pci9, &out.Pci9
		*out = make([]Pci9Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PcisObservation.
func (in *PcisObservation) DeepCopy() *PcisObservation {
	if in == nil {
		return nil
	}
	out := new(PcisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PcisParameters) DeepCopyInto(out *PcisParameters) {
	*out = *in
	if in.Pci0 != nil {
		in, out := &in.Pci0, &out.Pci0
		*out = make([]Pci0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci1 != nil {
		in, out := &in.Pci1, &out.Pci1
		*out = make([]Pci1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci10 != nil {
		in, out := &in.Pci10, &out.Pci10
		*out = make([]Pci10Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci11 != nil {
		in, out := &in.Pci11, &out.Pci11
		*out = make([]Pci11Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci12 != nil {
		in, out := &in.Pci12, &out.Pci12
		*out = make([]Pci12Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci13 != nil {
		in, out := &in.Pci13, &out.Pci13
		*out = make([]Pci13Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci14 != nil {
		in, out := &in.Pci14, &out.Pci14
		*out = make([]Pci14Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci2 != nil {
		in, out := &in.Pci2, &out.Pci2
		*out = make([]Pci2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci3 != nil {
		in, out := &in.Pci3, &out.Pci3
		*out = make([]Pci3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci4 != nil {
		in, out := &in.Pci4, &out.Pci4
		*out = make([]Pci4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci5 != nil {
		in, out := &in.Pci5, &out.Pci5
		*out = make([]Pci5Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci6 != nil {
		in, out := &in.Pci6, &out.Pci6
		*out = make([]Pci6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci7 != nil {
		in, out := &in.Pci7, &out.Pci7
		*out = make([]Pci7Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci8 != nil {
		in, out := &in.Pci8, &out.Pci8
		*out = make([]Pci8Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pci9 != nil {
		in, out := &in.Pci9, &out.Pci9
		*out = make([]Pci9Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PcisParameters.
func (in *PcisParameters) DeepCopy() *PcisParameters {
	if in == nil {
		return nil
	}
	out := new(PcisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortObservation) DeepCopyInto(out *PortObservation) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortObservation.
func (in *PortObservation) DeepCopy() *PortObservation {
	if in == nil {
		return nil
	}
	out := new(PortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortParameters) DeepCopyInto(out *PortParameters) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortParameters.
func (in *PortParameters) DeepCopy() *PortParameters {
	if in == nil {
		return nil
	}
	out := new(PortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Qemu) DeepCopyInto(out *Qemu) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Qemu.
func (in *Qemu) DeepCopy() *Qemu {
	if in == nil {
		return nil
	}
	out := new(Qemu)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Qemu) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuList) DeepCopyInto(out *QemuList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Qemu, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuList.
func (in *QemuList) DeepCopy() *QemuList {
	if in == nil {
		return nil
	}
	out := new(QemuList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QemuList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuObservation) DeepCopyInto(out *QemuObservation) {
	*out = *in
	if in.AdditionalWait != nil {
		in, out := &in.AdditionalWait, &out.AdditionalWait
		*out = new(float64)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = new(float64)
		**out = **in
	}
	if in.AgentTimeout != nil {
		in, out := &in.AgentTimeout, &out.AgentTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = new(string)
		**out = **in
	}
	if in.AutomaticReboot != nil {
		in, out := &in.AutomaticReboot, &out.AutomaticReboot
		*out = new(bool)
		**out = **in
	}
	if in.Balloon != nil {
		in, out := &in.Balloon, &out.Balloon
		*out = new(float64)
		**out = **in
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(string)
		**out = **in
	}
	if in.Bootdisk != nil {
		in, out := &in.Bootdisk, &out.Bootdisk
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUType != nil {
		in, out := &in.CPUType, &out.CPUType
		*out = new(string)
		**out = **in
	}
	if in.CiWait != nil {
		in, out := &in.CiWait, &out.CiWait
		*out = new(float64)
		**out = **in
	}
	if in.Cicustom != nil {
		in, out := &in.Cicustom, &out.Cicustom
		*out = new(string)
		**out = **in
	}
	if in.Ciupgrade != nil {
		in, out := &in.Ciupgrade, &out.Ciupgrade
		*out = new(bool)
		**out = **in
	}
	if in.Ciuser != nil {
		in, out := &in.Ciuser, &out.Ciuser
		*out = new(string)
		**out = **in
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = new(string)
		**out = **in
	}
	if in.CloneID != nil {
		in, out := &in.CloneID, &out.CloneID
		*out = new(float64)
		**out = **in
	}
	if in.CloneWait != nil {
		in, out := &in.CloneWait, &out.CloneWait
		*out = new(float64)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.CurrentNode != nil {
		in, out := &in.CurrentNode, &out.CurrentNode
		*out = new(string)
		**out = **in
	}
	if in.DefaultIPv4Address != nil {
		in, out := &in.DefaultIPv4Address, &out.DefaultIPv4Address
		*out = new(string)
		**out = **in
	}
	if in.DefaultIPv6Address != nil {
		in, out := &in.DefaultIPv6Address, &out.DefaultIPv6Address
		*out = new(string)
		**out = **in
	}
	if in.DefineConnectionInfo != nil {
		in, out := &in.DefineConnectionInfo, &out.DefineConnectionInfo
		*out = new(bool)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]DisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Efidisk != nil {
		in, out := &in.Efidisk, &out.Efidisk
		*out = make([]EfidiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceCreate != nil {
		in, out := &in.ForceCreate, &out.ForceCreate
		*out = new(bool)
		**out = **in
	}
	if in.ForceRecreateOnChangeOf != nil {
		in, out := &in.ForceRecreateOnChangeOf, &out.ForceRecreateOnChangeOf
		*out = new(string)
		**out = **in
	}
	if in.FullClone != nil {
		in, out := &in.FullClone, &out.FullClone
		*out = new(bool)
		**out = **in
	}
	if in.Hagroup != nil {
		in, out := &in.Hagroup, &out.Hagroup
		*out = new(string)
		**out = **in
	}
	if in.Hastate != nil {
		in, out := &in.Hastate, &out.Hastate
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hotplug != nil {
		in, out := &in.Hotplug, &out.Hotplug
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig0 != nil {
		in, out := &in.Ipconfig0, &out.Ipconfig0
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig1 != nil {
		in, out := &in.Ipconfig1, &out.Ipconfig1
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig10 != nil {
		in, out := &in.Ipconfig10, &out.Ipconfig10
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig11 != nil {
		in, out := &in.Ipconfig11, &out.Ipconfig11
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig12 != nil {
		in, out := &in.Ipconfig12, &out.Ipconfig12
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig13 != nil {
		in, out := &in.Ipconfig13, &out.Ipconfig13
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig14 != nil {
		in, out := &in.Ipconfig14, &out.Ipconfig14
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig15 != nil {
		in, out := &in.Ipconfig15, &out.Ipconfig15
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig2 != nil {
		in, out := &in.Ipconfig2, &out.Ipconfig2
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig3 != nil {
		in, out := &in.Ipconfig3, &out.Ipconfig3
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig4 != nil {
		in, out := &in.Ipconfig4, &out.Ipconfig4
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig5 != nil {
		in, out := &in.Ipconfig5, &out.Ipconfig5
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig6 != nil {
		in, out := &in.Ipconfig6, &out.Ipconfig6
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig7 != nil {
		in, out := &in.Ipconfig7, &out.Ipconfig7
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig8 != nil {
		in, out := &in.Ipconfig8, &out.Ipconfig8
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig9 != nil {
		in, out := &in.Ipconfig9, &out.Ipconfig9
		*out = new(string)
		**out = **in
	}
	if in.Kvm != nil {
		in, out := &in.Kvm, &out.Kvm
		*out = new(bool)
		**out = **in
	}
	if in.LinkedVmid != nil {
		in, out := &in.LinkedVmid, &out.LinkedVmid
		*out = new(float64)
		**out = **in
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nameserver != nil {
		in, out := &in.Nameserver, &out.Nameserver
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Onboot != nil {
		in, out := &in.Onboot, &out.Onboot
		*out = new(bool)
		**out = **in
	}
	if in.OsNetworkConfig != nil {
		in, out := &in.OsNetworkConfig, &out.OsNetworkConfig
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Pci != nil {
		in, out := &in.Pci, &out.Pci
		*out = make([]PciObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pcis != nil {
		in, out := &in.Pcis, &out.Pcis
		*out = make([]PcisObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pool != nil {
		in, out := &in.Pool, &out.Pool
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Pxe != nil {
		in, out := &in.Pxe, &out.Pxe
		*out = new(bool)
		**out = **in
	}
	if in.QemuOs != nil {
		in, out := &in.QemuOs, &out.QemuOs
		*out = new(string)
		**out = **in
	}
	if in.RebootRequired != nil {
		in, out := &in.RebootRequired, &out.RebootRequired
		*out = new(bool)
		**out = **in
	}
	if in.SSHForwardIP != nil {
		in, out := &in.SSHForwardIP, &out.SSHForwardIP
		*out = new(string)
		**out = **in
	}
	if in.SSHHost != nil {
		in, out := &in.SSHHost, &out.SSHHost
		*out = new(string)
		**out = **in
	}
	if in.SSHPort != nil {
		in, out := &in.SSHPort, &out.SSHPort
		*out = new(string)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Scsihw != nil {
		in, out := &in.Scsihw, &out.Scsihw
		*out = new(string)
		**out = **in
	}
	if in.Searchdomain != nil {
		in, out := &in.Searchdomain, &out.Searchdomain
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = make([]SerialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipIPv4 != nil {
		in, out := &in.SkipIPv4, &out.SkipIPv4
		*out = new(bool)
		**out = **in
	}
	if in.SkipIPv6 != nil {
		in, out := &in.SkipIPv6, &out.SkipIPv6
		*out = new(bool)
		**out = **in
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Sshkeys != nil {
		in, out := &in.Sshkeys, &out.Sshkeys
		*out = new(string)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = new(string)
		**out = **in
	}
	if in.Tablet != nil {
		in, out := &in.Tablet, &out.Tablet
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.TargetNode != nil {
		in, out := &in.TargetNode, &out.TargetNode
		*out = new(string)
		**out = **in
	}
	if in.TargetNodes != nil {
		in, out := &in.TargetNodes, &out.TargetNodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TpmState != nil {
		in, out := &in.TpmState, &out.TpmState
		*out = make([]TpmStateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnusedDisk != nil {
		in, out := &in.UnusedDisk, &out.UnusedDisk
		*out = make([]UnusedDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usbs != nil {
		in, out := &in.Usbs, &out.Usbs
		*out = make([]UsbsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Vmid != nil {
		in, out := &in.Vmid, &out.Vmid
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuObservation.
func (in *QemuObservation) DeepCopy() *QemuObservation {
	if in == nil {
		return nil
	}
	out := new(QemuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuParameters) DeepCopyInto(out *QemuParameters) {
	*out = *in
	if in.AdditionalWait != nil {
		in, out := &in.AdditionalWait, &out.AdditionalWait
		*out = new(float64)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = new(float64)
		**out = **in
	}
	if in.AgentTimeout != nil {
		in, out := &in.AgentTimeout, &out.AgentTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = new(string)
		**out = **in
	}
	if in.AutomaticReboot != nil {
		in, out := &in.AutomaticReboot, &out.AutomaticReboot
		*out = new(bool)
		**out = **in
	}
	if in.Balloon != nil {
		in, out := &in.Balloon, &out.Balloon
		*out = new(float64)
		**out = **in
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(string)
		**out = **in
	}
	if in.Bootdisk != nil {
		in, out := &in.Bootdisk, &out.Bootdisk
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUType != nil {
		in, out := &in.CPUType, &out.CPUType
		*out = new(string)
		**out = **in
	}
	if in.CiWait != nil {
		in, out := &in.CiWait, &out.CiWait
		*out = new(float64)
		**out = **in
	}
	if in.Cicustom != nil {
		in, out := &in.Cicustom, &out.Cicustom
		*out = new(string)
		**out = **in
	}
	if in.CipasswordSecretRef != nil {
		in, out := &in.CipasswordSecretRef, &out.CipasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Ciupgrade != nil {
		in, out := &in.Ciupgrade, &out.Ciupgrade
		*out = new(bool)
		**out = **in
	}
	if in.Ciuser != nil {
		in, out := &in.Ciuser, &out.Ciuser
		*out = new(string)
		**out = **in
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = new(string)
		**out = **in
	}
	if in.CloneID != nil {
		in, out := &in.CloneID, &out.CloneID
		*out = new(float64)
		**out = **in
	}
	if in.CloneWait != nil {
		in, out := &in.CloneWait, &out.CloneWait
		*out = new(float64)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.DefineConnectionInfo != nil {
		in, out := &in.DefineConnectionInfo, &out.DefineConnectionInfo
		*out = new(bool)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]DisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Efidisk != nil {
		in, out := &in.Efidisk, &out.Efidisk
		*out = make([]EfidiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceCreate != nil {
		in, out := &in.ForceCreate, &out.ForceCreate
		*out = new(bool)
		**out = **in
	}
	if in.ForceRecreateOnChangeOf != nil {
		in, out := &in.ForceRecreateOnChangeOf, &out.ForceRecreateOnChangeOf
		*out = new(string)
		**out = **in
	}
	if in.FullClone != nil {
		in, out := &in.FullClone, &out.FullClone
		*out = new(bool)
		**out = **in
	}
	if in.Hagroup != nil {
		in, out := &in.Hagroup, &out.Hagroup
		*out = new(string)
		**out = **in
	}
	if in.Hastate != nil {
		in, out := &in.Hastate, &out.Hastate
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hotplug != nil {
		in, out := &in.Hotplug, &out.Hotplug
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig0 != nil {
		in, out := &in.Ipconfig0, &out.Ipconfig0
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig1 != nil {
		in, out := &in.Ipconfig1, &out.Ipconfig1
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig10 != nil {
		in, out := &in.Ipconfig10, &out.Ipconfig10
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig11 != nil {
		in, out := &in.Ipconfig11, &out.Ipconfig11
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig12 != nil {
		in, out := &in.Ipconfig12, &out.Ipconfig12
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig13 != nil {
		in, out := &in.Ipconfig13, &out.Ipconfig13
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig14 != nil {
		in, out := &in.Ipconfig14, &out.Ipconfig14
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig15 != nil {
		in, out := &in.Ipconfig15, &out.Ipconfig15
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig2 != nil {
		in, out := &in.Ipconfig2, &out.Ipconfig2
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig3 != nil {
		in, out := &in.Ipconfig3, &out.Ipconfig3
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig4 != nil {
		in, out := &in.Ipconfig4, &out.Ipconfig4
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig5 != nil {
		in, out := &in.Ipconfig5, &out.Ipconfig5
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig6 != nil {
		in, out := &in.Ipconfig6, &out.Ipconfig6
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig7 != nil {
		in, out := &in.Ipconfig7, &out.Ipconfig7
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig8 != nil {
		in, out := &in.Ipconfig8, &out.Ipconfig8
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig9 != nil {
		in, out := &in.Ipconfig9, &out.Ipconfig9
		*out = new(string)
		**out = **in
	}
	if in.Kvm != nil {
		in, out := &in.Kvm, &out.Kvm
		*out = new(bool)
		**out = **in
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nameserver != nil {
		in, out := &in.Nameserver, &out.Nameserver
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Onboot != nil {
		in, out := &in.Onboot, &out.Onboot
		*out = new(bool)
		**out = **in
	}
	if in.OsNetworkConfig != nil {
		in, out := &in.OsNetworkConfig, &out.OsNetworkConfig
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Pci != nil {
		in, out := &in.Pci, &out.Pci
		*out = make([]PciParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pcis != nil {
		in, out := &in.Pcis, &out.Pcis
		*out = make([]PcisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pool != nil {
		in, out := &in.Pool, &out.Pool
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Pxe != nil {
		in, out := &in.Pxe, &out.Pxe
		*out = new(bool)
		**out = **in
	}
	if in.QemuOs != nil {
		in, out := &in.QemuOs, &out.QemuOs
		*out = new(string)
		**out = **in
	}
	if in.SSHForwardIP != nil {
		in, out := &in.SSHForwardIP, &out.SSHForwardIP
		*out = new(string)
		**out = **in
	}
	if in.SSHPrivateKeySecretRef != nil {
		in, out := &in.SSHPrivateKeySecretRef, &out.SSHPrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Scsihw != nil {
		in, out := &in.Scsihw, &out.Scsihw
		*out = new(string)
		**out = **in
	}
	if in.Searchdomain != nil {
		in, out := &in.Searchdomain, &out.Searchdomain
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = make([]SerialParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipIPv4 != nil {
		in, out := &in.SkipIPv4, &out.SkipIPv4
		*out = new(bool)
		**out = **in
	}
	if in.SkipIPv6 != nil {
		in, out := &in.SkipIPv6, &out.SkipIPv6
		*out = new(bool)
		**out = **in
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Sshkeys != nil {
		in, out := &in.Sshkeys, &out.Sshkeys
		*out = new(string)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = new(string)
		**out = **in
	}
	if in.Tablet != nil {
		in, out := &in.Tablet, &out.Tablet
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.TargetNode != nil {
		in, out := &in.TargetNode, &out.TargetNode
		*out = new(string)
		**out = **in
	}
	if in.TargetNodes != nil {
		in, out := &in.TargetNodes, &out.TargetNodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TpmState != nil {
		in, out := &in.TpmState, &out.TpmState
		*out = make([]TpmStateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usbs != nil {
		in, out := &in.Usbs, &out.Usbs
		*out = make([]UsbsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Vmid != nil {
		in, out := &in.Vmid, &out.Vmid
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuParameters.
func (in *QemuParameters) DeepCopy() *QemuParameters {
	if in == nil {
		return nil
	}
	out := new(QemuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuSpec) DeepCopyInto(out *QemuSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuSpec.
func (in *QemuSpec) DeepCopy() *QemuSpec {
	if in == nil {
		return nil
	}
	out := new(QemuSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuStatus) DeepCopyInto(out *QemuStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuStatus.
func (in *QemuStatus) DeepCopy() *QemuStatus {
	if in == nil {
		return nil
	}
	out := new(QemuStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RawObservation) DeepCopyInto(out *RawObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RawObservation.
func (in *RawObservation) DeepCopy() *RawObservation {
	if in == nil {
		return nil
	}
	out := new(RawObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RawParameters) DeepCopyInto(out *RawParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryGpu != nil {
		in, out := &in.PrimaryGpu, &out.PrimaryGpu
		*out = new(bool)
		**out = **in
	}
	if in.RawID != nil {
		in, out := &in.RawID, &out.RawID
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.SubDeviceID != nil {
		in, out := &in.SubDeviceID, &out.SubDeviceID
		*out = new(string)
		**out = **in
	}
	if in.SubVendorID != nil {
		in, out := &in.SubVendorID, &out.SubVendorID
		*out = new(string)
		**out = **in
	}
	if in.VendorID != nil {
		in, out := &in.VendorID, &out.VendorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RawParameters.
func (in *RawParameters) DeepCopy() *RawParameters {
	if in == nil {
		return nil
	}
	out := new(RawParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CdromObservation) DeepCopyInto(out *Sata0CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CdromObservation.
func (in *Sata0CdromObservation) DeepCopy() *Sata0CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CdromParameters) DeepCopyInto(out *Sata0CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CdromParameters.
func (in *Sata0CdromParameters) DeepCopy() *Sata0CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CloudinitObservation) DeepCopyInto(out *Sata0CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CloudinitObservation.
func (in *Sata0CloudinitObservation) DeepCopy() *Sata0CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CloudinitParameters) DeepCopyInto(out *Sata0CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CloudinitParameters.
func (in *Sata0CloudinitParameters) DeepCopy() *Sata0CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0DiskObservation) DeepCopyInto(out *Sata0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0DiskObservation.
func (in *Sata0DiskObservation) DeepCopy() *Sata0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0DiskParameters) DeepCopyInto(out *Sata0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0DiskParameters.
func (in *Sata0DiskParameters) DeepCopy() *Sata0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0Observation) DeepCopyInto(out *Sata0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata0CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata0CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata0PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0Observation.
func (in *Sata0Observation) DeepCopy() *Sata0Observation {
	if in == nil {
		return nil
	}
	out := new(Sata0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0Parameters) DeepCopyInto(out *Sata0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata0CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata0CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata0PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0Parameters.
func (in *Sata0Parameters) DeepCopy() *Sata0Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0PassthroughObservation) DeepCopyInto(out *Sata0PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0PassthroughObservation.
func (in *Sata0PassthroughObservation) DeepCopy() *Sata0PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0PassthroughParameters) DeepCopyInto(out *Sata0PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0PassthroughParameters.
func (in *Sata0PassthroughParameters) DeepCopy() *Sata0PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CdromObservation) DeepCopyInto(out *Sata1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CdromObservation.
func (in *Sata1CdromObservation) DeepCopy() *Sata1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CdromParameters) DeepCopyInto(out *Sata1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CdromParameters.
func (in *Sata1CdromParameters) DeepCopy() *Sata1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CloudinitObservation) DeepCopyInto(out *Sata1CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CloudinitObservation.
func (in *Sata1CloudinitObservation) DeepCopy() *Sata1CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CloudinitParameters) DeepCopyInto(out *Sata1CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CloudinitParameters.
func (in *Sata1CloudinitParameters) DeepCopy() *Sata1CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1DiskObservation) DeepCopyInto(out *Sata1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1DiskObservation.
func (in *Sata1DiskObservation) DeepCopy() *Sata1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1DiskParameters) DeepCopyInto(out *Sata1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1DiskParameters.
func (in *Sata1DiskParameters) DeepCopy() *Sata1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1Observation) DeepCopyInto(out *Sata1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata1CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1Observation.
func (in *Sata1Observation) DeepCopy() *Sata1Observation {
	if in == nil {
		return nil
	}
	out := new(Sata1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1Parameters) DeepCopyInto(out *Sata1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata1CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1Parameters.
func (in *Sata1Parameters) DeepCopy() *Sata1Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1PassthroughObservation) DeepCopyInto(out *Sata1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1PassthroughObservation.
func (in *Sata1PassthroughObservation) DeepCopy() *Sata1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1PassthroughParameters) DeepCopyInto(out *Sata1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1PassthroughParameters.
func (in *Sata1PassthroughParameters) DeepCopy() *Sata1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CdromObservation) DeepCopyInto(out *Sata2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CdromObservation.
func (in *Sata2CdromObservation) DeepCopy() *Sata2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CdromParameters) DeepCopyInto(out *Sata2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CdromParameters.
func (in *Sata2CdromParameters) DeepCopy() *Sata2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CloudinitObservation) DeepCopyInto(out *Sata2CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CloudinitObservation.
func (in *Sata2CloudinitObservation) DeepCopy() *Sata2CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CloudinitParameters) DeepCopyInto(out *Sata2CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CloudinitParameters.
func (in *Sata2CloudinitParameters) DeepCopy() *Sata2CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2DiskObservation) DeepCopyInto(out *Sata2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2DiskObservation.
func (in *Sata2DiskObservation) DeepCopy() *Sata2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2DiskParameters) DeepCopyInto(out *Sata2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2DiskParameters.
func (in *Sata2DiskParameters) DeepCopy() *Sata2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2Observation) DeepCopyInto(out *Sata2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata2CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2Observation.
func (in *Sata2Observation) DeepCopy() *Sata2Observation {
	if in == nil {
		return nil
	}
	out := new(Sata2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2Parameters) DeepCopyInto(out *Sata2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata2CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2Parameters.
func (in *Sata2Parameters) DeepCopy() *Sata2Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2PassthroughObservation) DeepCopyInto(out *Sata2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2PassthroughObservation.
func (in *Sata2PassthroughObservation) DeepCopy() *Sata2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2PassthroughParameters) DeepCopyInto(out *Sata2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2PassthroughParameters.
func (in *Sata2PassthroughParameters) DeepCopy() *Sata2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CdromObservation) DeepCopyInto(out *Sata3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CdromObservation.
func (in *Sata3CdromObservation) DeepCopy() *Sata3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CdromParameters) DeepCopyInto(out *Sata3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CdromParameters.
func (in *Sata3CdromParameters) DeepCopy() *Sata3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CloudinitObservation) DeepCopyInto(out *Sata3CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CloudinitObservation.
func (in *Sata3CloudinitObservation) DeepCopy() *Sata3CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CloudinitParameters) DeepCopyInto(out *Sata3CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CloudinitParameters.
func (in *Sata3CloudinitParameters) DeepCopy() *Sata3CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3DiskObservation) DeepCopyInto(out *Sata3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3DiskObservation.
func (in *Sata3DiskObservation) DeepCopy() *Sata3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3DiskParameters) DeepCopyInto(out *Sata3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3DiskParameters.
func (in *Sata3DiskParameters) DeepCopy() *Sata3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3Observation) DeepCopyInto(out *Sata3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata3CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3Observation.
func (in *Sata3Observation) DeepCopy() *Sata3Observation {
	if in == nil {
		return nil
	}
	out := new(Sata3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3Parameters) DeepCopyInto(out *Sata3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata3CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3Parameters.
func (in *Sata3Parameters) DeepCopy() *Sata3Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3PassthroughObservation) DeepCopyInto(out *Sata3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3PassthroughObservation.
func (in *Sata3PassthroughObservation) DeepCopy() *Sata3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3PassthroughParameters) DeepCopyInto(out *Sata3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3PassthroughParameters.
func (in *Sata3PassthroughParameters) DeepCopy() *Sata3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CdromObservation) DeepCopyInto(out *Sata4CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CdromObservation.
func (in *Sata4CdromObservation) DeepCopy() *Sata4CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CdromParameters) DeepCopyInto(out *Sata4CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CdromParameters.
func (in *Sata4CdromParameters) DeepCopy() *Sata4CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CloudinitObservation) DeepCopyInto(out *Sata4CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CloudinitObservation.
func (in *Sata4CloudinitObservation) DeepCopy() *Sata4CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CloudinitParameters) DeepCopyInto(out *Sata4CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CloudinitParameters.
func (in *Sata4CloudinitParameters) DeepCopy() *Sata4CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4DiskObservation) DeepCopyInto(out *Sata4DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4DiskObservation.
func (in *Sata4DiskObservation) DeepCopy() *Sata4DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4DiskParameters) DeepCopyInto(out *Sata4DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4DiskParameters.
func (in *Sata4DiskParameters) DeepCopy() *Sata4DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4Observation) DeepCopyInto(out *Sata4Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata4CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata4CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata4DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata4PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4Observation.
func (in *Sata4Observation) DeepCopy() *Sata4Observation {
	if in == nil {
		return nil
	}
	out := new(Sata4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4Parameters) DeepCopyInto(out *Sata4Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata4CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata4CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata4DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata4PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4Parameters.
func (in *Sata4Parameters) DeepCopy() *Sata4Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4PassthroughObservation) DeepCopyInto(out *Sata4PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4PassthroughObservation.
func (in *Sata4PassthroughObservation) DeepCopy() *Sata4PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4PassthroughParameters) DeepCopyInto(out *Sata4PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4PassthroughParameters.
func (in *Sata4PassthroughParameters) DeepCopy() *Sata4PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CdromObservation) DeepCopyInto(out *Sata5CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CdromObservation.
func (in *Sata5CdromObservation) DeepCopy() *Sata5CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CdromParameters) DeepCopyInto(out *Sata5CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CdromParameters.
func (in *Sata5CdromParameters) DeepCopy() *Sata5CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CloudinitObservation) DeepCopyInto(out *Sata5CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CloudinitObservation.
func (in *Sata5CloudinitObservation) DeepCopy() *Sata5CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CloudinitParameters) DeepCopyInto(out *Sata5CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CloudinitParameters.
func (in *Sata5CloudinitParameters) DeepCopy() *Sata5CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5DiskObservation) DeepCopyInto(out *Sata5DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5DiskObservation.
func (in *Sata5DiskObservation) DeepCopy() *Sata5DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5DiskParameters) DeepCopyInto(out *Sata5DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5DiskParameters.
func (in *Sata5DiskParameters) DeepCopy() *Sata5DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5Observation) DeepCopyInto(out *Sata5Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata5CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata5CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata5DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata5PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5Observation.
func (in *Sata5Observation) DeepCopy() *Sata5Observation {
	if in == nil {
		return nil
	}
	out := new(Sata5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5Parameters) DeepCopyInto(out *Sata5Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata5CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata5CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata5DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata5PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5Parameters.
func (in *Sata5Parameters) DeepCopy() *Sata5Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5PassthroughObservation) DeepCopyInto(out *Sata5PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5PassthroughObservation.
func (in *Sata5PassthroughObservation) DeepCopy() *Sata5PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5PassthroughParameters) DeepCopyInto(out *Sata5PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5PassthroughParameters.
func (in *Sata5PassthroughParameters) DeepCopy() *Sata5PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SataObservation) DeepCopyInto(out *SataObservation) {
	*out = *in
	if in.Sata0 != nil {
		in, out := &in.Sata0, &out.Sata0
		*out = make([]Sata0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata1 != nil {
		in, out := &in.Sata1, &out.Sata1
		*out = make([]Sata1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata2 != nil {
		in, out := &in.Sata2, &out.Sata2
		*out = make([]Sata2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata3 != nil {
		in, out := &in.Sata3, &out.Sata3
		*out = make([]Sata3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata4 != nil {
		in, out := &in.Sata4, &out.Sata4
		*out = make([]Sata4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata5 != nil {
		in, out := &in.Sata5, &out.Sata5
		*out = make([]Sata5Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SataObservation.
func (in *SataObservation) DeepCopy() *SataObservation {
	if in == nil {
		return nil
	}
	out := new(SataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SataParameters) DeepCopyInto(out *SataParameters) {
	*out = *in
	if in.Sata0 != nil {
		in, out := &in.Sata0, &out.Sata0
		*out = make([]Sata0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata1 != nil {
		in, out := &in.Sata1, &out.Sata1
		*out = make([]Sata1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata2 != nil {
		in, out := &in.Sata2, &out.Sata2
		*out = make([]Sata2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata3 != nil {
		in, out := &in.Sata3, &out.Sata3
		*out = make([]Sata3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata4 != nil {
		in, out := &in.Sata4, &out.Sata4
		*out = make([]Sata4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata5 != nil {
		in, out := &in.Sata5, &out.Sata5
		*out = make([]Sata5Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SataParameters.
func (in *SataParameters) DeepCopy() *SataParameters {
	if in == nil {
		return nil
	}
	out := new(SataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CdromObservation) DeepCopyInto(out *Scsi0CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CdromObservation.
func (in *Scsi0CdromObservation) DeepCopy() *Scsi0CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CdromParameters) DeepCopyInto(out *Scsi0CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CdromParameters.
func (in *Scsi0CdromParameters) DeepCopy() *Scsi0CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CloudinitObservation) DeepCopyInto(out *Scsi0CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CloudinitObservation.
func (in *Scsi0CloudinitObservation) DeepCopy() *Scsi0CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CloudinitParameters) DeepCopyInto(out *Scsi0CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CloudinitParameters.
func (in *Scsi0CloudinitParameters) DeepCopy() *Scsi0CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0DiskObservation) DeepCopyInto(out *Scsi0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0DiskObservation.
func (in *Scsi0DiskObservation) DeepCopy() *Scsi0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0DiskParameters) DeepCopyInto(out *Scsi0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0DiskParameters.
func (in *Scsi0DiskParameters) DeepCopy() *Scsi0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0Observation) DeepCopyInto(out *Scsi0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi0CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi0CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi0PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0Observation.
func (in *Scsi0Observation) DeepCopy() *Scsi0Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0Parameters) DeepCopyInto(out *Scsi0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi0CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi0CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi0PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0Parameters.
func (in *Scsi0Parameters) DeepCopy() *Scsi0Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0PassthroughObservation) DeepCopyInto(out *Scsi0PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0PassthroughObservation.
func (in *Scsi0PassthroughObservation) DeepCopy() *Scsi0PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0PassthroughParameters) DeepCopyInto(out *Scsi0PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0PassthroughParameters.
func (in *Scsi0PassthroughParameters) DeepCopy() *Scsi0PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CdromObservation) DeepCopyInto(out *Scsi10CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CdromObservation.
func (in *Scsi10CdromObservation) DeepCopy() *Scsi10CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CdromParameters) DeepCopyInto(out *Scsi10CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CdromParameters.
func (in *Scsi10CdromParameters) DeepCopy() *Scsi10CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CloudinitObservation) DeepCopyInto(out *Scsi10CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CloudinitObservation.
func (in *Scsi10CloudinitObservation) DeepCopy() *Scsi10CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CloudinitParameters) DeepCopyInto(out *Scsi10CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CloudinitParameters.
func (in *Scsi10CloudinitParameters) DeepCopy() *Scsi10CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10DiskObservation) DeepCopyInto(out *Scsi10DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10DiskObservation.
func (in *Scsi10DiskObservation) DeepCopy() *Scsi10DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10DiskParameters) DeepCopyInto(out *Scsi10DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10DiskParameters.
func (in *Scsi10DiskParameters) DeepCopy() *Scsi10DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10Observation) DeepCopyInto(out *Scsi10Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi10CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi10CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi10DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi10PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10Observation.
func (in *Scsi10Observation) DeepCopy() *Scsi10Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi10Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10Parameters) DeepCopyInto(out *Scsi10Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi10CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi10CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi10DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi10PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10Parameters.
func (in *Scsi10Parameters) DeepCopy() *Scsi10Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10PassthroughObservation) DeepCopyInto(out *Scsi10PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10PassthroughObservation.
func (in *Scsi10PassthroughObservation) DeepCopy() *Scsi10PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10PassthroughParameters) DeepCopyInto(out *Scsi10PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10PassthroughParameters.
func (in *Scsi10PassthroughParameters) DeepCopy() *Scsi10PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CdromObservation) DeepCopyInto(out *Scsi11CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CdromObservation.
func (in *Scsi11CdromObservation) DeepCopy() *Scsi11CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CdromParameters) DeepCopyInto(out *Scsi11CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CdromParameters.
func (in *Scsi11CdromParameters) DeepCopy() *Scsi11CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CloudinitObservation) DeepCopyInto(out *Scsi11CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CloudinitObservation.
func (in *Scsi11CloudinitObservation) DeepCopy() *Scsi11CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CloudinitParameters) DeepCopyInto(out *Scsi11CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CloudinitParameters.
func (in *Scsi11CloudinitParameters) DeepCopy() *Scsi11CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11DiskObservation) DeepCopyInto(out *Scsi11DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11DiskObservation.
func (in *Scsi11DiskObservation) DeepCopy() *Scsi11DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11DiskParameters) DeepCopyInto(out *Scsi11DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11DiskParameters.
func (in *Scsi11DiskParameters) DeepCopy() *Scsi11DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11Observation) DeepCopyInto(out *Scsi11Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi11CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi11CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi11DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi11PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11Observation.
func (in *Scsi11Observation) DeepCopy() *Scsi11Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi11Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11Parameters) DeepCopyInto(out *Scsi11Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi11CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi11CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi11DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi11PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11Parameters.
func (in *Scsi11Parameters) DeepCopy() *Scsi11Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11PassthroughObservation) DeepCopyInto(out *Scsi11PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11PassthroughObservation.
func (in *Scsi11PassthroughObservation) DeepCopy() *Scsi11PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11PassthroughParameters) DeepCopyInto(out *Scsi11PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11PassthroughParameters.
func (in *Scsi11PassthroughParameters) DeepCopy() *Scsi11PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CdromObservation) DeepCopyInto(out *Scsi12CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CdromObservation.
func (in *Scsi12CdromObservation) DeepCopy() *Scsi12CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CdromParameters) DeepCopyInto(out *Scsi12CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CdromParameters.
func (in *Scsi12CdromParameters) DeepCopy() *Scsi12CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CloudinitObservation) DeepCopyInto(out *Scsi12CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CloudinitObservation.
func (in *Scsi12CloudinitObservation) DeepCopy() *Scsi12CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CloudinitParameters) DeepCopyInto(out *Scsi12CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CloudinitParameters.
func (in *Scsi12CloudinitParameters) DeepCopy() *Scsi12CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12DiskObservation) DeepCopyInto(out *Scsi12DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12DiskObservation.
func (in *Scsi12DiskObservation) DeepCopy() *Scsi12DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12DiskParameters) DeepCopyInto(out *Scsi12DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12DiskParameters.
func (in *Scsi12DiskParameters) DeepCopy() *Scsi12DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12Observation) DeepCopyInto(out *Scsi12Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi12CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi12CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi12DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi12PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12Observation.
func (in *Scsi12Observation) DeepCopy() *Scsi12Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi12Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12Parameters) DeepCopyInto(out *Scsi12Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi12CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi12CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi12DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi12PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12Parameters.
func (in *Scsi12Parameters) DeepCopy() *Scsi12Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12PassthroughObservation) DeepCopyInto(out *Scsi12PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12PassthroughObservation.
func (in *Scsi12PassthroughObservation) DeepCopy() *Scsi12PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12PassthroughParameters) DeepCopyInto(out *Scsi12PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12PassthroughParameters.
func (in *Scsi12PassthroughParameters) DeepCopy() *Scsi12PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CdromObservation) DeepCopyInto(out *Scsi13CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CdromObservation.
func (in *Scsi13CdromObservation) DeepCopy() *Scsi13CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CdromParameters) DeepCopyInto(out *Scsi13CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CdromParameters.
func (in *Scsi13CdromParameters) DeepCopy() *Scsi13CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CloudinitObservation) DeepCopyInto(out *Scsi13CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CloudinitObservation.
func (in *Scsi13CloudinitObservation) DeepCopy() *Scsi13CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CloudinitParameters) DeepCopyInto(out *Scsi13CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CloudinitParameters.
func (in *Scsi13CloudinitParameters) DeepCopy() *Scsi13CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13DiskObservation) DeepCopyInto(out *Scsi13DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13DiskObservation.
func (in *Scsi13DiskObservation) DeepCopy() *Scsi13DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13DiskParameters) DeepCopyInto(out *Scsi13DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13DiskParameters.
func (in *Scsi13DiskParameters) DeepCopy() *Scsi13DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13Observation) DeepCopyInto(out *Scsi13Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi13CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi13CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi13DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi13PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13Observation.
func (in *Scsi13Observation) DeepCopy() *Scsi13Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi13Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13Parameters) DeepCopyInto(out *Scsi13Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi13CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi13CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi13DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi13PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13Parameters.
func (in *Scsi13Parameters) DeepCopy() *Scsi13Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13PassthroughObservation) DeepCopyInto(out *Scsi13PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13PassthroughObservation.
func (in *Scsi13PassthroughObservation) DeepCopy() *Scsi13PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13PassthroughParameters) DeepCopyInto(out *Scsi13PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13PassthroughParameters.
func (in *Scsi13PassthroughParameters) DeepCopy() *Scsi13PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CdromObservation) DeepCopyInto(out *Scsi14CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CdromObservation.
func (in *Scsi14CdromObservation) DeepCopy() *Scsi14CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CdromParameters) DeepCopyInto(out *Scsi14CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CdromParameters.
func (in *Scsi14CdromParameters) DeepCopy() *Scsi14CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CloudinitObservation) DeepCopyInto(out *Scsi14CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CloudinitObservation.
func (in *Scsi14CloudinitObservation) DeepCopy() *Scsi14CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CloudinitParameters) DeepCopyInto(out *Scsi14CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CloudinitParameters.
func (in *Scsi14CloudinitParameters) DeepCopy() *Scsi14CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14DiskObservation) DeepCopyInto(out *Scsi14DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14DiskObservation.
func (in *Scsi14DiskObservation) DeepCopy() *Scsi14DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14DiskParameters) DeepCopyInto(out *Scsi14DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14DiskParameters.
func (in *Scsi14DiskParameters) DeepCopy() *Scsi14DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14Observation) DeepCopyInto(out *Scsi14Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi14CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi14CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi14DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi14PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14Observation.
func (in *Scsi14Observation) DeepCopy() *Scsi14Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi14Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14Parameters) DeepCopyInto(out *Scsi14Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi14CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi14CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi14DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi14PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14Parameters.
func (in *Scsi14Parameters) DeepCopy() *Scsi14Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14PassthroughObservation) DeepCopyInto(out *Scsi14PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14PassthroughObservation.
func (in *Scsi14PassthroughObservation) DeepCopy() *Scsi14PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14PassthroughParameters) DeepCopyInto(out *Scsi14PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14PassthroughParameters.
func (in *Scsi14PassthroughParameters) DeepCopy() *Scsi14PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CdromObservation) DeepCopyInto(out *Scsi15CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CdromObservation.
func (in *Scsi15CdromObservation) DeepCopy() *Scsi15CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CdromParameters) DeepCopyInto(out *Scsi15CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CdromParameters.
func (in *Scsi15CdromParameters) DeepCopy() *Scsi15CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CloudinitObservation) DeepCopyInto(out *Scsi15CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CloudinitObservation.
func (in *Scsi15CloudinitObservation) DeepCopy() *Scsi15CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CloudinitParameters) DeepCopyInto(out *Scsi15CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CloudinitParameters.
func (in *Scsi15CloudinitParameters) DeepCopy() *Scsi15CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15DiskObservation) DeepCopyInto(out *Scsi15DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15DiskObservation.
func (in *Scsi15DiskObservation) DeepCopy() *Scsi15DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15DiskParameters) DeepCopyInto(out *Scsi15DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15DiskParameters.
func (in *Scsi15DiskParameters) DeepCopy() *Scsi15DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15Observation) DeepCopyInto(out *Scsi15Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi15CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi15CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi15DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi15PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15Observation.
func (in *Scsi15Observation) DeepCopy() *Scsi15Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi15Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15Parameters) DeepCopyInto(out *Scsi15Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi15CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi15CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi15DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi15PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15Parameters.
func (in *Scsi15Parameters) DeepCopy() *Scsi15Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15PassthroughObservation) DeepCopyInto(out *Scsi15PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15PassthroughObservation.
func (in *Scsi15PassthroughObservation) DeepCopy() *Scsi15PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15PassthroughParameters) DeepCopyInto(out *Scsi15PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15PassthroughParameters.
func (in *Scsi15PassthroughParameters) DeepCopy() *Scsi15PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CdromObservation) DeepCopyInto(out *Scsi16CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CdromObservation.
func (in *Scsi16CdromObservation) DeepCopy() *Scsi16CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CdromParameters) DeepCopyInto(out *Scsi16CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CdromParameters.
func (in *Scsi16CdromParameters) DeepCopy() *Scsi16CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CloudinitObservation) DeepCopyInto(out *Scsi16CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CloudinitObservation.
func (in *Scsi16CloudinitObservation) DeepCopy() *Scsi16CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CloudinitParameters) DeepCopyInto(out *Scsi16CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CloudinitParameters.
func (in *Scsi16CloudinitParameters) DeepCopy() *Scsi16CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16DiskObservation) DeepCopyInto(out *Scsi16DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16DiskObservation.
func (in *Scsi16DiskObservation) DeepCopy() *Scsi16DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16DiskParameters) DeepCopyInto(out *Scsi16DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16DiskParameters.
func (in *Scsi16DiskParameters) DeepCopy() *Scsi16DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16Observation) DeepCopyInto(out *Scsi16Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi16CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi16CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi16DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi16PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16Observation.
func (in *Scsi16Observation) DeepCopy() *Scsi16Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi16Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16Parameters) DeepCopyInto(out *Scsi16Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi16CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi16CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi16DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi16PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16Parameters.
func (in *Scsi16Parameters) DeepCopy() *Scsi16Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16PassthroughObservation) DeepCopyInto(out *Scsi16PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16PassthroughObservation.
func (in *Scsi16PassthroughObservation) DeepCopy() *Scsi16PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16PassthroughParameters) DeepCopyInto(out *Scsi16PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16PassthroughParameters.
func (in *Scsi16PassthroughParameters) DeepCopy() *Scsi16PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CdromObservation) DeepCopyInto(out *Scsi17CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CdromObservation.
func (in *Scsi17CdromObservation) DeepCopy() *Scsi17CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CdromParameters) DeepCopyInto(out *Scsi17CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CdromParameters.
func (in *Scsi17CdromParameters) DeepCopy() *Scsi17CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CloudinitObservation) DeepCopyInto(out *Scsi17CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CloudinitObservation.
func (in *Scsi17CloudinitObservation) DeepCopy() *Scsi17CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CloudinitParameters) DeepCopyInto(out *Scsi17CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CloudinitParameters.
func (in *Scsi17CloudinitParameters) DeepCopy() *Scsi17CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17DiskObservation) DeepCopyInto(out *Scsi17DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17DiskObservation.
func (in *Scsi17DiskObservation) DeepCopy() *Scsi17DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17DiskParameters) DeepCopyInto(out *Scsi17DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17DiskParameters.
func (in *Scsi17DiskParameters) DeepCopy() *Scsi17DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17Observation) DeepCopyInto(out *Scsi17Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi17CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi17CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi17DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi17PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17Observation.
func (in *Scsi17Observation) DeepCopy() *Scsi17Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi17Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17Parameters) DeepCopyInto(out *Scsi17Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi17CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi17CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi17DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi17PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17Parameters.
func (in *Scsi17Parameters) DeepCopy() *Scsi17Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17PassthroughObservation) DeepCopyInto(out *Scsi17PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17PassthroughObservation.
func (in *Scsi17PassthroughObservation) DeepCopy() *Scsi17PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17PassthroughParameters) DeepCopyInto(out *Scsi17PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17PassthroughParameters.
func (in *Scsi17PassthroughParameters) DeepCopy() *Scsi17PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CdromObservation) DeepCopyInto(out *Scsi18CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CdromObservation.
func (in *Scsi18CdromObservation) DeepCopy() *Scsi18CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CdromParameters) DeepCopyInto(out *Scsi18CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CdromParameters.
func (in *Scsi18CdromParameters) DeepCopy() *Scsi18CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CloudinitObservation) DeepCopyInto(out *Scsi18CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CloudinitObservation.
func (in *Scsi18CloudinitObservation) DeepCopy() *Scsi18CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CloudinitParameters) DeepCopyInto(out *Scsi18CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CloudinitParameters.
func (in *Scsi18CloudinitParameters) DeepCopy() *Scsi18CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18DiskObservation) DeepCopyInto(out *Scsi18DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18DiskObservation.
func (in *Scsi18DiskObservation) DeepCopy() *Scsi18DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18DiskParameters) DeepCopyInto(out *Scsi18DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18DiskParameters.
func (in *Scsi18DiskParameters) DeepCopy() *Scsi18DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18Observation) DeepCopyInto(out *Scsi18Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi18CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi18CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi18DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi18PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18Observation.
func (in *Scsi18Observation) DeepCopy() *Scsi18Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi18Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18Parameters) DeepCopyInto(out *Scsi18Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi18CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi18CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi18DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi18PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18Parameters.
func (in *Scsi18Parameters) DeepCopy() *Scsi18Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18PassthroughObservation) DeepCopyInto(out *Scsi18PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18PassthroughObservation.
func (in *Scsi18PassthroughObservation) DeepCopy() *Scsi18PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18PassthroughParameters) DeepCopyInto(out *Scsi18PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18PassthroughParameters.
func (in *Scsi18PassthroughParameters) DeepCopy() *Scsi18PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CdromObservation) DeepCopyInto(out *Scsi19CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CdromObservation.
func (in *Scsi19CdromObservation) DeepCopy() *Scsi19CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CdromParameters) DeepCopyInto(out *Scsi19CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CdromParameters.
func (in *Scsi19CdromParameters) DeepCopy() *Scsi19CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CloudinitObservation) DeepCopyInto(out *Scsi19CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CloudinitObservation.
func (in *Scsi19CloudinitObservation) DeepCopy() *Scsi19CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CloudinitParameters) DeepCopyInto(out *Scsi19CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CloudinitParameters.
func (in *Scsi19CloudinitParameters) DeepCopy() *Scsi19CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19DiskObservation) DeepCopyInto(out *Scsi19DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19DiskObservation.
func (in *Scsi19DiskObservation) DeepCopy() *Scsi19DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19DiskParameters) DeepCopyInto(out *Scsi19DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19DiskParameters.
func (in *Scsi19DiskParameters) DeepCopy() *Scsi19DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19Observation) DeepCopyInto(out *Scsi19Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi19CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi19CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi19DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi19PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19Observation.
func (in *Scsi19Observation) DeepCopy() *Scsi19Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi19Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19Parameters) DeepCopyInto(out *Scsi19Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi19CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi19CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi19DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi19PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19Parameters.
func (in *Scsi19Parameters) DeepCopy() *Scsi19Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19PassthroughObservation) DeepCopyInto(out *Scsi19PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19PassthroughObservation.
func (in *Scsi19PassthroughObservation) DeepCopy() *Scsi19PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19PassthroughParameters) DeepCopyInto(out *Scsi19PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19PassthroughParameters.
func (in *Scsi19PassthroughParameters) DeepCopy() *Scsi19PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CdromObservation) DeepCopyInto(out *Scsi1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CdromObservation.
func (in *Scsi1CdromObservation) DeepCopy() *Scsi1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CdromParameters) DeepCopyInto(out *Scsi1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CdromParameters.
func (in *Scsi1CdromParameters) DeepCopy() *Scsi1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CloudinitObservation) DeepCopyInto(out *Scsi1CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CloudinitObservation.
func (in *Scsi1CloudinitObservation) DeepCopy() *Scsi1CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CloudinitParameters) DeepCopyInto(out *Scsi1CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CloudinitParameters.
func (in *Scsi1CloudinitParameters) DeepCopy() *Scsi1CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1DiskObservation) DeepCopyInto(out *Scsi1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1DiskObservation.
func (in *Scsi1DiskObservation) DeepCopy() *Scsi1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1DiskParameters) DeepCopyInto(out *Scsi1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1DiskParameters.
func (in *Scsi1DiskParameters) DeepCopy() *Scsi1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1Observation) DeepCopyInto(out *Scsi1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi1CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1Observation.
func (in *Scsi1Observation) DeepCopy() *Scsi1Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1Parameters) DeepCopyInto(out *Scsi1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi1CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1Parameters.
func (in *Scsi1Parameters) DeepCopy() *Scsi1Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1PassthroughObservation) DeepCopyInto(out *Scsi1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1PassthroughObservation.
func (in *Scsi1PassthroughObservation) DeepCopy() *Scsi1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1PassthroughParameters) DeepCopyInto(out *Scsi1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1PassthroughParameters.
func (in *Scsi1PassthroughParameters) DeepCopy() *Scsi1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CdromObservation) DeepCopyInto(out *Scsi20CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CdromObservation.
func (in *Scsi20CdromObservation) DeepCopy() *Scsi20CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CdromParameters) DeepCopyInto(out *Scsi20CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CdromParameters.
func (in *Scsi20CdromParameters) DeepCopy() *Scsi20CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CloudinitObservation) DeepCopyInto(out *Scsi20CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CloudinitObservation.
func (in *Scsi20CloudinitObservation) DeepCopy() *Scsi20CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CloudinitParameters) DeepCopyInto(out *Scsi20CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CloudinitParameters.
func (in *Scsi20CloudinitParameters) DeepCopy() *Scsi20CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20DiskObservation) DeepCopyInto(out *Scsi20DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20DiskObservation.
func (in *Scsi20DiskObservation) DeepCopy() *Scsi20DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20DiskParameters) DeepCopyInto(out *Scsi20DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20DiskParameters.
func (in *Scsi20DiskParameters) DeepCopy() *Scsi20DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20Observation) DeepCopyInto(out *Scsi20Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi20CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi20CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi20DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi20PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20Observation.
func (in *Scsi20Observation) DeepCopy() *Scsi20Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi20Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20Parameters) DeepCopyInto(out *Scsi20Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi20CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi20CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi20DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi20PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20Parameters.
func (in *Scsi20Parameters) DeepCopy() *Scsi20Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20PassthroughObservation) DeepCopyInto(out *Scsi20PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20PassthroughObservation.
func (in *Scsi20PassthroughObservation) DeepCopy() *Scsi20PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20PassthroughParameters) DeepCopyInto(out *Scsi20PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20PassthroughParameters.
func (in *Scsi20PassthroughParameters) DeepCopy() *Scsi20PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CdromObservation) DeepCopyInto(out *Scsi21CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CdromObservation.
func (in *Scsi21CdromObservation) DeepCopy() *Scsi21CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CdromParameters) DeepCopyInto(out *Scsi21CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CdromParameters.
func (in *Scsi21CdromParameters) DeepCopy() *Scsi21CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CloudinitObservation) DeepCopyInto(out *Scsi21CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CloudinitObservation.
func (in *Scsi21CloudinitObservation) DeepCopy() *Scsi21CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CloudinitParameters) DeepCopyInto(out *Scsi21CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CloudinitParameters.
func (in *Scsi21CloudinitParameters) DeepCopy() *Scsi21CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21DiskObservation) DeepCopyInto(out *Scsi21DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21DiskObservation.
func (in *Scsi21DiskObservation) DeepCopy() *Scsi21DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21DiskParameters) DeepCopyInto(out *Scsi21DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21DiskParameters.
func (in *Scsi21DiskParameters) DeepCopy() *Scsi21DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21Observation) DeepCopyInto(out *Scsi21Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi21CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi21CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi21DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi21PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21Observation.
func (in *Scsi21Observation) DeepCopy() *Scsi21Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi21Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21Parameters) DeepCopyInto(out *Scsi21Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi21CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi21CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi21DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi21PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21Parameters.
func (in *Scsi21Parameters) DeepCopy() *Scsi21Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21PassthroughObservation) DeepCopyInto(out *Scsi21PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21PassthroughObservation.
func (in *Scsi21PassthroughObservation) DeepCopy() *Scsi21PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21PassthroughParameters) DeepCopyInto(out *Scsi21PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21PassthroughParameters.
func (in *Scsi21PassthroughParameters) DeepCopy() *Scsi21PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CdromObservation) DeepCopyInto(out *Scsi22CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CdromObservation.
func (in *Scsi22CdromObservation) DeepCopy() *Scsi22CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CdromParameters) DeepCopyInto(out *Scsi22CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CdromParameters.
func (in *Scsi22CdromParameters) DeepCopy() *Scsi22CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CloudinitObservation) DeepCopyInto(out *Scsi22CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CloudinitObservation.
func (in *Scsi22CloudinitObservation) DeepCopy() *Scsi22CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CloudinitParameters) DeepCopyInto(out *Scsi22CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CloudinitParameters.
func (in *Scsi22CloudinitParameters) DeepCopy() *Scsi22CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22DiskObservation) DeepCopyInto(out *Scsi22DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22DiskObservation.
func (in *Scsi22DiskObservation) DeepCopy() *Scsi22DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22DiskParameters) DeepCopyInto(out *Scsi22DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22DiskParameters.
func (in *Scsi22DiskParameters) DeepCopy() *Scsi22DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22Observation) DeepCopyInto(out *Scsi22Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi22CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi22CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi22DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi22PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22Observation.
func (in *Scsi22Observation) DeepCopy() *Scsi22Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi22Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22Parameters) DeepCopyInto(out *Scsi22Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi22CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi22CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi22DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi22PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22Parameters.
func (in *Scsi22Parameters) DeepCopy() *Scsi22Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22PassthroughObservation) DeepCopyInto(out *Scsi22PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22PassthroughObservation.
func (in *Scsi22PassthroughObservation) DeepCopy() *Scsi22PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22PassthroughParameters) DeepCopyInto(out *Scsi22PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22PassthroughParameters.
func (in *Scsi22PassthroughParameters) DeepCopy() *Scsi22PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CdromObservation) DeepCopyInto(out *Scsi23CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CdromObservation.
func (in *Scsi23CdromObservation) DeepCopy() *Scsi23CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CdromParameters) DeepCopyInto(out *Scsi23CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CdromParameters.
func (in *Scsi23CdromParameters) DeepCopy() *Scsi23CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CloudinitObservation) DeepCopyInto(out *Scsi23CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CloudinitObservation.
func (in *Scsi23CloudinitObservation) DeepCopy() *Scsi23CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CloudinitParameters) DeepCopyInto(out *Scsi23CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CloudinitParameters.
func (in *Scsi23CloudinitParameters) DeepCopy() *Scsi23CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23DiskObservation) DeepCopyInto(out *Scsi23DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23DiskObservation.
func (in *Scsi23DiskObservation) DeepCopy() *Scsi23DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23DiskParameters) DeepCopyInto(out *Scsi23DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23DiskParameters.
func (in *Scsi23DiskParameters) DeepCopy() *Scsi23DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23Observation) DeepCopyInto(out *Scsi23Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi23CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi23CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi23DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi23PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23Observation.
func (in *Scsi23Observation) DeepCopy() *Scsi23Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi23Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23Parameters) DeepCopyInto(out *Scsi23Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi23CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi23CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi23DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi23PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23Parameters.
func (in *Scsi23Parameters) DeepCopy() *Scsi23Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23PassthroughObservation) DeepCopyInto(out *Scsi23PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23PassthroughObservation.
func (in *Scsi23PassthroughObservation) DeepCopy() *Scsi23PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23PassthroughParameters) DeepCopyInto(out *Scsi23PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23PassthroughParameters.
func (in *Scsi23PassthroughParameters) DeepCopy() *Scsi23PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CdromObservation) DeepCopyInto(out *Scsi24CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CdromObservation.
func (in *Scsi24CdromObservation) DeepCopy() *Scsi24CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CdromParameters) DeepCopyInto(out *Scsi24CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CdromParameters.
func (in *Scsi24CdromParameters) DeepCopy() *Scsi24CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CloudinitObservation) DeepCopyInto(out *Scsi24CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CloudinitObservation.
func (in *Scsi24CloudinitObservation) DeepCopy() *Scsi24CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CloudinitParameters) DeepCopyInto(out *Scsi24CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CloudinitParameters.
func (in *Scsi24CloudinitParameters) DeepCopy() *Scsi24CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24DiskObservation) DeepCopyInto(out *Scsi24DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24DiskObservation.
func (in *Scsi24DiskObservation) DeepCopy() *Scsi24DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24DiskParameters) DeepCopyInto(out *Scsi24DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24DiskParameters.
func (in *Scsi24DiskParameters) DeepCopy() *Scsi24DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24Observation) DeepCopyInto(out *Scsi24Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi24CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi24CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi24DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi24PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24Observation.
func (in *Scsi24Observation) DeepCopy() *Scsi24Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi24Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24Parameters) DeepCopyInto(out *Scsi24Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi24CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi24CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi24DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi24PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24Parameters.
func (in *Scsi24Parameters) DeepCopy() *Scsi24Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24PassthroughObservation) DeepCopyInto(out *Scsi24PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24PassthroughObservation.
func (in *Scsi24PassthroughObservation) DeepCopy() *Scsi24PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24PassthroughParameters) DeepCopyInto(out *Scsi24PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24PassthroughParameters.
func (in *Scsi24PassthroughParameters) DeepCopy() *Scsi24PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CdromObservation) DeepCopyInto(out *Scsi25CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CdromObservation.
func (in *Scsi25CdromObservation) DeepCopy() *Scsi25CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CdromParameters) DeepCopyInto(out *Scsi25CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CdromParameters.
func (in *Scsi25CdromParameters) DeepCopy() *Scsi25CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CloudinitObservation) DeepCopyInto(out *Scsi25CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CloudinitObservation.
func (in *Scsi25CloudinitObservation) DeepCopy() *Scsi25CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CloudinitParameters) DeepCopyInto(out *Scsi25CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CloudinitParameters.
func (in *Scsi25CloudinitParameters) DeepCopy() *Scsi25CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25DiskObservation) DeepCopyInto(out *Scsi25DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25DiskObservation.
func (in *Scsi25DiskObservation) DeepCopy() *Scsi25DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25DiskParameters) DeepCopyInto(out *Scsi25DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25DiskParameters.
func (in *Scsi25DiskParameters) DeepCopy() *Scsi25DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25Observation) DeepCopyInto(out *Scsi25Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi25CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi25CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi25DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi25PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25Observation.
func (in *Scsi25Observation) DeepCopy() *Scsi25Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi25Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25Parameters) DeepCopyInto(out *Scsi25Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi25CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi25CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi25DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi25PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25Parameters.
func (in *Scsi25Parameters) DeepCopy() *Scsi25Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25PassthroughObservation) DeepCopyInto(out *Scsi25PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25PassthroughObservation.
func (in *Scsi25PassthroughObservation) DeepCopy() *Scsi25PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25PassthroughParameters) DeepCopyInto(out *Scsi25PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25PassthroughParameters.
func (in *Scsi25PassthroughParameters) DeepCopy() *Scsi25PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CdromObservation) DeepCopyInto(out *Scsi26CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CdromObservation.
func (in *Scsi26CdromObservation) DeepCopy() *Scsi26CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CdromParameters) DeepCopyInto(out *Scsi26CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CdromParameters.
func (in *Scsi26CdromParameters) DeepCopy() *Scsi26CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CloudinitObservation) DeepCopyInto(out *Scsi26CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CloudinitObservation.
func (in *Scsi26CloudinitObservation) DeepCopy() *Scsi26CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CloudinitParameters) DeepCopyInto(out *Scsi26CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CloudinitParameters.
func (in *Scsi26CloudinitParameters) DeepCopy() *Scsi26CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26DiskObservation) DeepCopyInto(out *Scsi26DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26DiskObservation.
func (in *Scsi26DiskObservation) DeepCopy() *Scsi26DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26DiskParameters) DeepCopyInto(out *Scsi26DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26DiskParameters.
func (in *Scsi26DiskParameters) DeepCopy() *Scsi26DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26Observation) DeepCopyInto(out *Scsi26Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi26CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi26CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi26DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi26PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26Observation.
func (in *Scsi26Observation) DeepCopy() *Scsi26Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi26Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26Parameters) DeepCopyInto(out *Scsi26Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi26CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi26CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi26DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi26PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26Parameters.
func (in *Scsi26Parameters) DeepCopy() *Scsi26Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26PassthroughObservation) DeepCopyInto(out *Scsi26PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26PassthroughObservation.
func (in *Scsi26PassthroughObservation) DeepCopy() *Scsi26PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26PassthroughParameters) DeepCopyInto(out *Scsi26PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26PassthroughParameters.
func (in *Scsi26PassthroughParameters) DeepCopy() *Scsi26PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CdromObservation) DeepCopyInto(out *Scsi27CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CdromObservation.
func (in *Scsi27CdromObservation) DeepCopy() *Scsi27CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CdromParameters) DeepCopyInto(out *Scsi27CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CdromParameters.
func (in *Scsi27CdromParameters) DeepCopy() *Scsi27CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CloudinitObservation) DeepCopyInto(out *Scsi27CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CloudinitObservation.
func (in *Scsi27CloudinitObservation) DeepCopy() *Scsi27CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CloudinitParameters) DeepCopyInto(out *Scsi27CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CloudinitParameters.
func (in *Scsi27CloudinitParameters) DeepCopy() *Scsi27CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27DiskObservation) DeepCopyInto(out *Scsi27DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27DiskObservation.
func (in *Scsi27DiskObservation) DeepCopy() *Scsi27DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27DiskParameters) DeepCopyInto(out *Scsi27DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27DiskParameters.
func (in *Scsi27DiskParameters) DeepCopy() *Scsi27DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27Observation) DeepCopyInto(out *Scsi27Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi27CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi27CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi27DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi27PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27Observation.
func (in *Scsi27Observation) DeepCopy() *Scsi27Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi27Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27Parameters) DeepCopyInto(out *Scsi27Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi27CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi27CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi27DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi27PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27Parameters.
func (in *Scsi27Parameters) DeepCopy() *Scsi27Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27PassthroughObservation) DeepCopyInto(out *Scsi27PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27PassthroughObservation.
func (in *Scsi27PassthroughObservation) DeepCopy() *Scsi27PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27PassthroughParameters) DeepCopyInto(out *Scsi27PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27PassthroughParameters.
func (in *Scsi27PassthroughParameters) DeepCopy() *Scsi27PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CdromObservation) DeepCopyInto(out *Scsi28CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CdromObservation.
func (in *Scsi28CdromObservation) DeepCopy() *Scsi28CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CdromParameters) DeepCopyInto(out *Scsi28CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CdromParameters.
func (in *Scsi28CdromParameters) DeepCopy() *Scsi28CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CloudinitObservation) DeepCopyInto(out *Scsi28CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CloudinitObservation.
func (in *Scsi28CloudinitObservation) DeepCopy() *Scsi28CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CloudinitParameters) DeepCopyInto(out *Scsi28CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CloudinitParameters.
func (in *Scsi28CloudinitParameters) DeepCopy() *Scsi28CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28DiskObservation) DeepCopyInto(out *Scsi28DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28DiskObservation.
func (in *Scsi28DiskObservation) DeepCopy() *Scsi28DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28DiskParameters) DeepCopyInto(out *Scsi28DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28DiskParameters.
func (in *Scsi28DiskParameters) DeepCopy() *Scsi28DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28Observation) DeepCopyInto(out *Scsi28Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi28CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi28CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi28DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi28PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28Observation.
func (in *Scsi28Observation) DeepCopy() *Scsi28Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi28Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28Parameters) DeepCopyInto(out *Scsi28Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi28CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi28CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi28DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi28PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28Parameters.
func (in *Scsi28Parameters) DeepCopy() *Scsi28Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28PassthroughObservation) DeepCopyInto(out *Scsi28PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28PassthroughObservation.
func (in *Scsi28PassthroughObservation) DeepCopy() *Scsi28PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28PassthroughParameters) DeepCopyInto(out *Scsi28PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28PassthroughParameters.
func (in *Scsi28PassthroughParameters) DeepCopy() *Scsi28PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CdromObservation) DeepCopyInto(out *Scsi29CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CdromObservation.
func (in *Scsi29CdromObservation) DeepCopy() *Scsi29CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CdromParameters) DeepCopyInto(out *Scsi29CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CdromParameters.
func (in *Scsi29CdromParameters) DeepCopy() *Scsi29CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CloudinitObservation) DeepCopyInto(out *Scsi29CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CloudinitObservation.
func (in *Scsi29CloudinitObservation) DeepCopy() *Scsi29CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CloudinitParameters) DeepCopyInto(out *Scsi29CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CloudinitParameters.
func (in *Scsi29CloudinitParameters) DeepCopy() *Scsi29CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29DiskObservation) DeepCopyInto(out *Scsi29DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29DiskObservation.
func (in *Scsi29DiskObservation) DeepCopy() *Scsi29DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29DiskParameters) DeepCopyInto(out *Scsi29DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29DiskParameters.
func (in *Scsi29DiskParameters) DeepCopy() *Scsi29DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29Observation) DeepCopyInto(out *Scsi29Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi29CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi29CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi29DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi29PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29Observation.
func (in *Scsi29Observation) DeepCopy() *Scsi29Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi29Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29Parameters) DeepCopyInto(out *Scsi29Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi29CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi29CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi29DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi29PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29Parameters.
func (in *Scsi29Parameters) DeepCopy() *Scsi29Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29PassthroughObservation) DeepCopyInto(out *Scsi29PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29PassthroughObservation.
func (in *Scsi29PassthroughObservation) DeepCopy() *Scsi29PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29PassthroughParameters) DeepCopyInto(out *Scsi29PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29PassthroughParameters.
func (in *Scsi29PassthroughParameters) DeepCopy() *Scsi29PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CdromObservation) DeepCopyInto(out *Scsi2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CdromObservation.
func (in *Scsi2CdromObservation) DeepCopy() *Scsi2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CdromParameters) DeepCopyInto(out *Scsi2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CdromParameters.
func (in *Scsi2CdromParameters) DeepCopy() *Scsi2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CloudinitObservation) DeepCopyInto(out *Scsi2CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CloudinitObservation.
func (in *Scsi2CloudinitObservation) DeepCopy() *Scsi2CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CloudinitParameters) DeepCopyInto(out *Scsi2CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CloudinitParameters.
func (in *Scsi2CloudinitParameters) DeepCopy() *Scsi2CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2DiskObservation) DeepCopyInto(out *Scsi2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2DiskObservation.
func (in *Scsi2DiskObservation) DeepCopy() *Scsi2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2DiskParameters) DeepCopyInto(out *Scsi2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2DiskParameters.
func (in *Scsi2DiskParameters) DeepCopy() *Scsi2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2Observation) DeepCopyInto(out *Scsi2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi2CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2Observation.
func (in *Scsi2Observation) DeepCopy() *Scsi2Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2Parameters) DeepCopyInto(out *Scsi2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi2CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2Parameters.
func (in *Scsi2Parameters) DeepCopy() *Scsi2Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2PassthroughObservation) DeepCopyInto(out *Scsi2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2PassthroughObservation.
func (in *Scsi2PassthroughObservation) DeepCopy() *Scsi2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2PassthroughParameters) DeepCopyInto(out *Scsi2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2PassthroughParameters.
func (in *Scsi2PassthroughParameters) DeepCopy() *Scsi2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CdromObservation) DeepCopyInto(out *Scsi30CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CdromObservation.
func (in *Scsi30CdromObservation) DeepCopy() *Scsi30CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CdromParameters) DeepCopyInto(out *Scsi30CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CdromParameters.
func (in *Scsi30CdromParameters) DeepCopy() *Scsi30CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CloudinitObservation) DeepCopyInto(out *Scsi30CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CloudinitObservation.
func (in *Scsi30CloudinitObservation) DeepCopy() *Scsi30CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CloudinitParameters) DeepCopyInto(out *Scsi30CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CloudinitParameters.
func (in *Scsi30CloudinitParameters) DeepCopy() *Scsi30CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30DiskObservation) DeepCopyInto(out *Scsi30DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30DiskObservation.
func (in *Scsi30DiskObservation) DeepCopy() *Scsi30DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30DiskParameters) DeepCopyInto(out *Scsi30DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30DiskParameters.
func (in *Scsi30DiskParameters) DeepCopy() *Scsi30DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30Observation) DeepCopyInto(out *Scsi30Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi30CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi30CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi30DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi30PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30Observation.
func (in *Scsi30Observation) DeepCopy() *Scsi30Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi30Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30Parameters) DeepCopyInto(out *Scsi30Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi30CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi30CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi30DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi30PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30Parameters.
func (in *Scsi30Parameters) DeepCopy() *Scsi30Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30PassthroughObservation) DeepCopyInto(out *Scsi30PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30PassthroughObservation.
func (in *Scsi30PassthroughObservation) DeepCopy() *Scsi30PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30PassthroughParameters) DeepCopyInto(out *Scsi30PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30PassthroughParameters.
func (in *Scsi30PassthroughParameters) DeepCopy() *Scsi30PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CdromObservation) DeepCopyInto(out *Scsi3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CdromObservation.
func (in *Scsi3CdromObservation) DeepCopy() *Scsi3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CdromParameters) DeepCopyInto(out *Scsi3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CdromParameters.
func (in *Scsi3CdromParameters) DeepCopy() *Scsi3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CloudinitObservation) DeepCopyInto(out *Scsi3CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CloudinitObservation.
func (in *Scsi3CloudinitObservation) DeepCopy() *Scsi3CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CloudinitParameters) DeepCopyInto(out *Scsi3CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CloudinitParameters.
func (in *Scsi3CloudinitParameters) DeepCopy() *Scsi3CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3DiskObservation) DeepCopyInto(out *Scsi3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3DiskObservation.
func (in *Scsi3DiskObservation) DeepCopy() *Scsi3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3DiskParameters) DeepCopyInto(out *Scsi3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3DiskParameters.
func (in *Scsi3DiskParameters) DeepCopy() *Scsi3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3Observation) DeepCopyInto(out *Scsi3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi3CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3Observation.
func (in *Scsi3Observation) DeepCopy() *Scsi3Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3Parameters) DeepCopyInto(out *Scsi3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi3CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3Parameters.
func (in *Scsi3Parameters) DeepCopy() *Scsi3Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3PassthroughObservation) DeepCopyInto(out *Scsi3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3PassthroughObservation.
func (in *Scsi3PassthroughObservation) DeepCopy() *Scsi3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3PassthroughParameters) DeepCopyInto(out *Scsi3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3PassthroughParameters.
func (in *Scsi3PassthroughParameters) DeepCopy() *Scsi3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CdromObservation) DeepCopyInto(out *Scsi4CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CdromObservation.
func (in *Scsi4CdromObservation) DeepCopy() *Scsi4CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CdromParameters) DeepCopyInto(out *Scsi4CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CdromParameters.
func (in *Scsi4CdromParameters) DeepCopy() *Scsi4CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CloudinitObservation) DeepCopyInto(out *Scsi4CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CloudinitObservation.
func (in *Scsi4CloudinitObservation) DeepCopy() *Scsi4CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CloudinitParameters) DeepCopyInto(out *Scsi4CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CloudinitParameters.
func (in *Scsi4CloudinitParameters) DeepCopy() *Scsi4CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4DiskObservation) DeepCopyInto(out *Scsi4DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4DiskObservation.
func (in *Scsi4DiskObservation) DeepCopy() *Scsi4DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4DiskParameters) DeepCopyInto(out *Scsi4DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4DiskParameters.
func (in *Scsi4DiskParameters) DeepCopy() *Scsi4DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4Observation) DeepCopyInto(out *Scsi4Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi4CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi4CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi4DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi4PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4Observation.
func (in *Scsi4Observation) DeepCopy() *Scsi4Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4Parameters) DeepCopyInto(out *Scsi4Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi4CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi4CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi4DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi4PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4Parameters.
func (in *Scsi4Parameters) DeepCopy() *Scsi4Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4PassthroughObservation) DeepCopyInto(out *Scsi4PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4PassthroughObservation.
func (in *Scsi4PassthroughObservation) DeepCopy() *Scsi4PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4PassthroughParameters) DeepCopyInto(out *Scsi4PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4PassthroughParameters.
func (in *Scsi4PassthroughParameters) DeepCopy() *Scsi4PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CdromObservation) DeepCopyInto(out *Scsi5CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CdromObservation.
func (in *Scsi5CdromObservation) DeepCopy() *Scsi5CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CdromParameters) DeepCopyInto(out *Scsi5CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CdromParameters.
func (in *Scsi5CdromParameters) DeepCopy() *Scsi5CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CloudinitObservation) DeepCopyInto(out *Scsi5CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CloudinitObservation.
func (in *Scsi5CloudinitObservation) DeepCopy() *Scsi5CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CloudinitParameters) DeepCopyInto(out *Scsi5CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CloudinitParameters.
func (in *Scsi5CloudinitParameters) DeepCopy() *Scsi5CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5DiskObservation) DeepCopyInto(out *Scsi5DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5DiskObservation.
func (in *Scsi5DiskObservation) DeepCopy() *Scsi5DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5DiskParameters) DeepCopyInto(out *Scsi5DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5DiskParameters.
func (in *Scsi5DiskParameters) DeepCopy() *Scsi5DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5Observation) DeepCopyInto(out *Scsi5Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi5CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi5CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi5DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi5PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5Observation.
func (in *Scsi5Observation) DeepCopy() *Scsi5Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5Parameters) DeepCopyInto(out *Scsi5Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi5CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi5CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi5DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi5PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5Parameters.
func (in *Scsi5Parameters) DeepCopy() *Scsi5Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5PassthroughObservation) DeepCopyInto(out *Scsi5PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5PassthroughObservation.
func (in *Scsi5PassthroughObservation) DeepCopy() *Scsi5PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5PassthroughParameters) DeepCopyInto(out *Scsi5PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5PassthroughParameters.
func (in *Scsi5PassthroughParameters) DeepCopy() *Scsi5PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CdromObservation) DeepCopyInto(out *Scsi6CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CdromObservation.
func (in *Scsi6CdromObservation) DeepCopy() *Scsi6CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CdromParameters) DeepCopyInto(out *Scsi6CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CdromParameters.
func (in *Scsi6CdromParameters) DeepCopy() *Scsi6CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CloudinitObservation) DeepCopyInto(out *Scsi6CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CloudinitObservation.
func (in *Scsi6CloudinitObservation) DeepCopy() *Scsi6CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CloudinitParameters) DeepCopyInto(out *Scsi6CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CloudinitParameters.
func (in *Scsi6CloudinitParameters) DeepCopy() *Scsi6CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6DiskObservation) DeepCopyInto(out *Scsi6DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6DiskObservation.
func (in *Scsi6DiskObservation) DeepCopy() *Scsi6DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6DiskParameters) DeepCopyInto(out *Scsi6DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6DiskParameters.
func (in *Scsi6DiskParameters) DeepCopy() *Scsi6DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6Observation) DeepCopyInto(out *Scsi6Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi6CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi6CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi6DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi6PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6Observation.
func (in *Scsi6Observation) DeepCopy() *Scsi6Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6Parameters) DeepCopyInto(out *Scsi6Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi6CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi6CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi6DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi6PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6Parameters.
func (in *Scsi6Parameters) DeepCopy() *Scsi6Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6PassthroughObservation) DeepCopyInto(out *Scsi6PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6PassthroughObservation.
func (in *Scsi6PassthroughObservation) DeepCopy() *Scsi6PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6PassthroughParameters) DeepCopyInto(out *Scsi6PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6PassthroughParameters.
func (in *Scsi6PassthroughParameters) DeepCopy() *Scsi6PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CdromObservation) DeepCopyInto(out *Scsi7CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CdromObservation.
func (in *Scsi7CdromObservation) DeepCopy() *Scsi7CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CdromParameters) DeepCopyInto(out *Scsi7CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CdromParameters.
func (in *Scsi7CdromParameters) DeepCopy() *Scsi7CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CloudinitObservation) DeepCopyInto(out *Scsi7CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CloudinitObservation.
func (in *Scsi7CloudinitObservation) DeepCopy() *Scsi7CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CloudinitParameters) DeepCopyInto(out *Scsi7CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CloudinitParameters.
func (in *Scsi7CloudinitParameters) DeepCopy() *Scsi7CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7DiskObservation) DeepCopyInto(out *Scsi7DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7DiskObservation.
func (in *Scsi7DiskObservation) DeepCopy() *Scsi7DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7DiskParameters) DeepCopyInto(out *Scsi7DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7DiskParameters.
func (in *Scsi7DiskParameters) DeepCopy() *Scsi7DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7Observation) DeepCopyInto(out *Scsi7Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi7CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi7CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi7DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi7PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7Observation.
func (in *Scsi7Observation) DeepCopy() *Scsi7Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi7Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7Parameters) DeepCopyInto(out *Scsi7Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi7CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi7CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi7DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi7PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7Parameters.
func (in *Scsi7Parameters) DeepCopy() *Scsi7Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7PassthroughObservation) DeepCopyInto(out *Scsi7PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7PassthroughObservation.
func (in *Scsi7PassthroughObservation) DeepCopy() *Scsi7PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7PassthroughParameters) DeepCopyInto(out *Scsi7PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7PassthroughParameters.
func (in *Scsi7PassthroughParameters) DeepCopy() *Scsi7PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CdromObservation) DeepCopyInto(out *Scsi8CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CdromObservation.
func (in *Scsi8CdromObservation) DeepCopy() *Scsi8CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CdromParameters) DeepCopyInto(out *Scsi8CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CdromParameters.
func (in *Scsi8CdromParameters) DeepCopy() *Scsi8CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CloudinitObservation) DeepCopyInto(out *Scsi8CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CloudinitObservation.
func (in *Scsi8CloudinitObservation) DeepCopy() *Scsi8CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CloudinitParameters) DeepCopyInto(out *Scsi8CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CloudinitParameters.
func (in *Scsi8CloudinitParameters) DeepCopy() *Scsi8CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8DiskObservation) DeepCopyInto(out *Scsi8DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8DiskObservation.
func (in *Scsi8DiskObservation) DeepCopy() *Scsi8DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8DiskParameters) DeepCopyInto(out *Scsi8DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8DiskParameters.
func (in *Scsi8DiskParameters) DeepCopy() *Scsi8DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8Observation) DeepCopyInto(out *Scsi8Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi8CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi8CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi8DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi8PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8Observation.
func (in *Scsi8Observation) DeepCopy() *Scsi8Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi8Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8Parameters) DeepCopyInto(out *Scsi8Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi8CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi8CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi8DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi8PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8Parameters.
func (in *Scsi8Parameters) DeepCopy() *Scsi8Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8PassthroughObservation) DeepCopyInto(out *Scsi8PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8PassthroughObservation.
func (in *Scsi8PassthroughObservation) DeepCopy() *Scsi8PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8PassthroughParameters) DeepCopyInto(out *Scsi8PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8PassthroughParameters.
func (in *Scsi8PassthroughParameters) DeepCopy() *Scsi8PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CdromObservation) DeepCopyInto(out *Scsi9CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CdromObservation.
func (in *Scsi9CdromObservation) DeepCopy() *Scsi9CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CdromParameters) DeepCopyInto(out *Scsi9CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CdromParameters.
func (in *Scsi9CdromParameters) DeepCopy() *Scsi9CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CloudinitObservation) DeepCopyInto(out *Scsi9CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CloudinitObservation.
func (in *Scsi9CloudinitObservation) DeepCopy() *Scsi9CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CloudinitParameters) DeepCopyInto(out *Scsi9CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CloudinitParameters.
func (in *Scsi9CloudinitParameters) DeepCopy() *Scsi9CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9DiskObservation) DeepCopyInto(out *Scsi9DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9DiskObservation.
func (in *Scsi9DiskObservation) DeepCopy() *Scsi9DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9DiskParameters) DeepCopyInto(out *Scsi9DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9DiskParameters.
func (in *Scsi9DiskParameters) DeepCopy() *Scsi9DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9Observation) DeepCopyInto(out *Scsi9Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi9CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi9CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi9DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi9PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9Observation.
func (in *Scsi9Observation) DeepCopy() *Scsi9Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi9Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9Parameters) DeepCopyInto(out *Scsi9Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi9CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi9CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi9DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi9PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9Parameters.
func (in *Scsi9Parameters) DeepCopy() *Scsi9Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9PassthroughObservation) DeepCopyInto(out *Scsi9PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9PassthroughObservation.
func (in *Scsi9PassthroughObservation) DeepCopy() *Scsi9PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9PassthroughParameters) DeepCopyInto(out *Scsi9PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9PassthroughParameters.
func (in *Scsi9PassthroughParameters) DeepCopy() *Scsi9PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScsiObservation) DeepCopyInto(out *ScsiObservation) {
	*out = *in
	if in.Scsi0 != nil {
		in, out := &in.Scsi0, &out.Scsi0
		*out = make([]Scsi0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi1 != nil {
		in, out := &in.Scsi1, &out.Scsi1
		*out = make([]Scsi1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi10 != nil {
		in, out := &in.Scsi10, &out.Scsi10
		*out = make([]Scsi10Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi11 != nil {
		in, out := &in.Scsi11, &out.Scsi11
		*out = make([]Scsi11Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi12 != nil {
		in, out := &in.Scsi12, &out.Scsi12
		*out = make([]Scsi12Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi13 != nil {
		in, out := &in.Scsi13, &out.Scsi13
		*out = make([]Scsi13Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi14 != nil {
		in, out := &in.Scsi14, &out.Scsi14
		*out = make([]Scsi14Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi15 != nil {
		in, out := &in.Scsi15, &out.Scsi15
		*out = make([]Scsi15Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi16 != nil {
		in, out := &in.Scsi16, &out.Scsi16
		*out = make([]Scsi16Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi17 != nil {
		in, out := &in.Scsi17, &out.Scsi17
		*out = make([]Scsi17Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi18 != nil {
		in, out := &in.Scsi18, &out.Scsi18
		*out = make([]Scsi18Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi19 != nil {
		in, out := &in.Scsi19, &out.Scsi19
		*out = make([]Scsi19Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi2 != nil {
		in, out := &in.Scsi2, &out.Scsi2
		*out = make([]Scsi2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi20 != nil {
		in, out := &in.Scsi20, &out.Scsi20
		*out = make([]Scsi20Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi21 != nil {
		in, out := &in.Scsi21, &out.Scsi21
		*out = make([]Scsi21Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi22 != nil {
		in, out := &in.Scsi22, &out.Scsi22
		*out = make([]Scsi22Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi23 != nil {
		in, out := &in.Scsi23, &out.Scsi23
		*out = make([]Scsi23Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi24 != nil {
		in, out := &in.Scsi24, &out.Scsi24
		*out = make([]Scsi24Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi25 != nil {
		in, out := &in.Scsi25, &out.Scsi25
		*out = make([]Scsi25Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi26 != nil {
		in, out := &in.Scsi26, &out.Scsi26
		*out = make([]Scsi26Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi27 != nil {
		in, out := &in.Scsi27, &out.Scsi27
		*out = make([]Scsi27Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi28 != nil {
		in, out := &in.Scsi28, &out.Scsi28
		*out = make([]Scsi28Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi29 != nil {
		in, out := &in.Scsi29, &out.Scsi29
		*out = make([]Scsi29Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi3 != nil {
		in, out := &in.Scsi3, &out.Scsi3
		*out = make([]Scsi3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi30 != nil {
		in, out := &in.Scsi30, &out.Scsi30
		*out = make([]Scsi30Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi4 != nil {
		in, out := &in.Scsi4, &out.Scsi4
		*out = make([]Scsi4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi5 != nil {
		in, out := &in.Scsi5, &out.Scsi5
		*out = make([]Scsi5Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi6 != nil {
		in, out := &in.Scsi6, &out.Scsi6
		*out = make([]Scsi6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi7 != nil {
		in, out := &in.Scsi7, &out.Scsi7
		*out = make([]Scsi7Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi8 != nil {
		in, out := &in.Scsi8, &out.Scsi8
		*out = make([]Scsi8Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi9 != nil {
		in, out := &in.Scsi9, &out.Scsi9
		*out = make([]Scsi9Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScsiObservation.
func (in *ScsiObservation) DeepCopy() *ScsiObservation {
	if in == nil {
		return nil
	}
	out := new(ScsiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScsiParameters) DeepCopyInto(out *ScsiParameters) {
	*out = *in
	if in.Scsi0 != nil {
		in, out := &in.Scsi0, &out.Scsi0
		*out = make([]Scsi0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi1 != nil {
		in, out := &in.Scsi1, &out.Scsi1
		*out = make([]Scsi1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi10 != nil {
		in, out := &in.Scsi10, &out.Scsi10
		*out = make([]Scsi10Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi11 != nil {
		in, out := &in.Scsi11, &out.Scsi11
		*out = make([]Scsi11Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi12 != nil {
		in, out := &in.Scsi12, &out.Scsi12
		*out = make([]Scsi12Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi13 != nil {
		in, out := &in.Scsi13, &out.Scsi13
		*out = make([]Scsi13Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi14 != nil {
		in, out := &in.Scsi14, &out.Scsi14
		*out = make([]Scsi14Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi15 != nil {
		in, out := &in.Scsi15, &out.Scsi15
		*out = make([]Scsi15Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi16 != nil {
		in, out := &in.Scsi16, &out.Scsi16
		*out = make([]Scsi16Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi17 != nil {
		in, out := &in.Scsi17, &out.Scsi17
		*out = make([]Scsi17Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi18 != nil {
		in, out := &in.Scsi18, &out.Scsi18
		*out = make([]Scsi18Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi19 != nil {
		in, out := &in.Scsi19, &out.Scsi19
		*out = make([]Scsi19Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi2 != nil {
		in, out := &in.Scsi2, &out.Scsi2
		*out = make([]Scsi2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi20 != nil {
		in, out := &in.Scsi20, &out.Scsi20
		*out = make([]Scsi20Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi21 != nil {
		in, out := &in.Scsi21, &out.Scsi21
		*out = make([]Scsi21Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi22 != nil {
		in, out := &in.Scsi22, &out.Scsi22
		*out = make([]Scsi22Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi23 != nil {
		in, out := &in.Scsi23, &out.Scsi23
		*out = make([]Scsi23Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi24 != nil {
		in, out := &in.Scsi24, &out.Scsi24
		*out = make([]Scsi24Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi25 != nil {
		in, out := &in.Scsi25, &out.Scsi25
		*out = make([]Scsi25Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi26 != nil {
		in, out := &in.Scsi26, &out.Scsi26
		*out = make([]Scsi26Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi27 != nil {
		in, out := &in.Scsi27, &out.Scsi27
		*out = make([]Scsi27Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi28 != nil {
		in, out := &in.Scsi28, &out.Scsi28
		*out = make([]Scsi28Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi29 != nil {
		in, out := &in.Scsi29, &out.Scsi29
		*out = make([]Scsi29Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi3 != nil {
		in, out := &in.Scsi3, &out.Scsi3
		*out = make([]Scsi3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi30 != nil {
		in, out := &in.Scsi30, &out.Scsi30
		*out = make([]Scsi30Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi4 != nil {
		in, out := &in.Scsi4, &out.Scsi4
		*out = make([]Scsi4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi5 != nil {
		in, out := &in.Scsi5, &out.Scsi5
		*out = make([]Scsi5Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi6 != nil {
		in, out := &in.Scsi6, &out.Scsi6
		*out = make([]Scsi6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi7 != nil {
		in, out := &in.Scsi7, &out.Scsi7
		*out = make([]Scsi7Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi8 != nil {
		in, out := &in.Scsi8, &out.Scsi8
		*out = make([]Scsi8Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi9 != nil {
		in, out := &in.Scsi9, &out.Scsi9
		*out = make([]Scsi9Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScsiParameters.
func (in *ScsiParameters) DeepCopy() *ScsiParameters {
	if in == nil {
		return nil
	}
	out := new(ScsiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialObservation) DeepCopyInto(out *SerialObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialObservation.
func (in *SerialObservation) DeepCopy() *SerialObservation {
	if in == nil {
		return nil
	}
	out := new(SerialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialParameters) DeepCopyInto(out *SerialParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialParameters.
func (in *SerialParameters) DeepCopy() *SerialParameters {
	if in == nil {
		return nil
	}
	out := new(SerialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosObservation) DeepCopyInto(out *SmbiosObservation) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosObservation.
func (in *SmbiosObservation) DeepCopy() *SmbiosObservation {
	if in == nil {
		return nil
	}
	out := new(SmbiosObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosParameters) DeepCopyInto(out *SmbiosParameters) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosParameters.
func (in *SmbiosParameters) DeepCopy() *SmbiosParameters {
	if in == nil {
		return nil
	}
	out := new(SmbiosParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpiceObservation) DeepCopyInto(out *SpiceObservation) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpiceObservation.
func (in *SpiceObservation) DeepCopy() *SpiceObservation {
	if in == nil {
		return nil
	}
	out := new(SpiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpiceParameters) DeepCopyInto(out *SpiceParameters) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpiceParameters.
func (in *SpiceParameters) DeepCopy() *SpiceParameters {
	if in == nil {
		return nil
	}
	out := new(SpiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TpmStateObservation) DeepCopyInto(out *TpmStateObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TpmStateObservation.
func (in *TpmStateObservation) DeepCopy() *TpmStateObservation {
	if in == nil {
		return nil
	}
	out := new(TpmStateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TpmStateParameters) DeepCopyInto(out *TpmStateParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TpmStateParameters.
func (in *TpmStateParameters) DeepCopy() *TpmStateParameters {
	if in == nil {
		return nil
	}
	out := new(TpmStateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnusedDiskObservation) DeepCopyInto(out *UnusedDiskObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.Slot != nil {
		in, out := &in.Slot, &out.Slot
		*out = new(float64)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnusedDiskObservation.
func (in *UnusedDiskObservation) DeepCopy() *UnusedDiskObservation {
	if in == nil {
		return nil
	}
	out := new(UnusedDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnusedDiskParameters) DeepCopyInto(out *UnusedDiskParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnusedDiskParameters.
func (in *UnusedDiskParameters) DeepCopy() *UnusedDiskParameters {
	if in == nil {
		return nil
	}
	out := new(UnusedDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb0MappingObservation) DeepCopyInto(out *Usb0MappingObservation) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb0MappingObservation.
func (in *Usb0MappingObservation) DeepCopy() *Usb0MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Usb0MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb0MappingParameters) DeepCopyInto(out *Usb0MappingParameters) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb0MappingParameters.
func (in *Usb0MappingParameters) DeepCopy() *Usb0MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Usb0MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb0Observation) DeepCopyInto(out *Usb0Observation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]DeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb0MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]PortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]SpiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb0Observation.
func (in *Usb0Observation) DeepCopy() *Usb0Observation {
	if in == nil {
		return nil
	}
	out := new(Usb0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb0Parameters) DeepCopyInto(out *Usb0Parameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]DeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb0MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]PortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]SpiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb0Parameters.
func (in *Usb0Parameters) DeepCopy() *Usb0Parameters {
	if in == nil {
		return nil
	}
	out := new(Usb0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1DeviceObservation) DeepCopyInto(out *Usb1DeviceObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1DeviceObservation.
func (in *Usb1DeviceObservation) DeepCopy() *Usb1DeviceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb1DeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1DeviceParameters) DeepCopyInto(out *Usb1DeviceParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1DeviceParameters.
func (in *Usb1DeviceParameters) DeepCopy() *Usb1DeviceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb1DeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1MappingObservation) DeepCopyInto(out *Usb1MappingObservation) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1MappingObservation.
func (in *Usb1MappingObservation) DeepCopy() *Usb1MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Usb1MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1MappingParameters) DeepCopyInto(out *Usb1MappingParameters) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1MappingParameters.
func (in *Usb1MappingParameters) DeepCopy() *Usb1MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Usb1MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1Observation) DeepCopyInto(out *Usb1Observation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb1DeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb1MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb1PortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb1SpiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1Observation.
func (in *Usb1Observation) DeepCopy() *Usb1Observation {
	if in == nil {
		return nil
	}
	out := new(Usb1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1Parameters) DeepCopyInto(out *Usb1Parameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb1DeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb1MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb1PortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb1SpiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1Parameters.
func (in *Usb1Parameters) DeepCopy() *Usb1Parameters {
	if in == nil {
		return nil
	}
	out := new(Usb1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1PortObservation) DeepCopyInto(out *Usb1PortObservation) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1PortObservation.
func (in *Usb1PortObservation) DeepCopy() *Usb1PortObservation {
	if in == nil {
		return nil
	}
	out := new(Usb1PortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1PortParameters) DeepCopyInto(out *Usb1PortParameters) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1PortParameters.
func (in *Usb1PortParameters) DeepCopy() *Usb1PortParameters {
	if in == nil {
		return nil
	}
	out := new(Usb1PortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1SpiceObservation) DeepCopyInto(out *Usb1SpiceObservation) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1SpiceObservation.
func (in *Usb1SpiceObservation) DeepCopy() *Usb1SpiceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb1SpiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb1SpiceParameters) DeepCopyInto(out *Usb1SpiceParameters) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb1SpiceParameters.
func (in *Usb1SpiceParameters) DeepCopy() *Usb1SpiceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb1SpiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2DeviceObservation) DeepCopyInto(out *Usb2DeviceObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2DeviceObservation.
func (in *Usb2DeviceObservation) DeepCopy() *Usb2DeviceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb2DeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2DeviceParameters) DeepCopyInto(out *Usb2DeviceParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2DeviceParameters.
func (in *Usb2DeviceParameters) DeepCopy() *Usb2DeviceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb2DeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2MappingObservation) DeepCopyInto(out *Usb2MappingObservation) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2MappingObservation.
func (in *Usb2MappingObservation) DeepCopy() *Usb2MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Usb2MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2MappingParameters) DeepCopyInto(out *Usb2MappingParameters) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2MappingParameters.
func (in *Usb2MappingParameters) DeepCopy() *Usb2MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Usb2MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2Observation) DeepCopyInto(out *Usb2Observation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb2DeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb2MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb2PortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb2SpiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2Observation.
func (in *Usb2Observation) DeepCopy() *Usb2Observation {
	if in == nil {
		return nil
	}
	out := new(Usb2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2Parameters) DeepCopyInto(out *Usb2Parameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb2DeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb2MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb2PortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb2SpiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2Parameters.
func (in *Usb2Parameters) DeepCopy() *Usb2Parameters {
	if in == nil {
		return nil
	}
	out := new(Usb2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2PortObservation) DeepCopyInto(out *Usb2PortObservation) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2PortObservation.
func (in *Usb2PortObservation) DeepCopy() *Usb2PortObservation {
	if in == nil {
		return nil
	}
	out := new(Usb2PortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2PortParameters) DeepCopyInto(out *Usb2PortParameters) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2PortParameters.
func (in *Usb2PortParameters) DeepCopy() *Usb2PortParameters {
	if in == nil {
		return nil
	}
	out := new(Usb2PortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2SpiceObservation) DeepCopyInto(out *Usb2SpiceObservation) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2SpiceObservation.
func (in *Usb2SpiceObservation) DeepCopy() *Usb2SpiceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb2SpiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb2SpiceParameters) DeepCopyInto(out *Usb2SpiceParameters) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb2SpiceParameters.
func (in *Usb2SpiceParameters) DeepCopy() *Usb2SpiceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb2SpiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3DeviceObservation) DeepCopyInto(out *Usb3DeviceObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3DeviceObservation.
func (in *Usb3DeviceObservation) DeepCopy() *Usb3DeviceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb3DeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3DeviceParameters) DeepCopyInto(out *Usb3DeviceParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3DeviceParameters.
func (in *Usb3DeviceParameters) DeepCopy() *Usb3DeviceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb3DeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3MappingObservation) DeepCopyInto(out *Usb3MappingObservation) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3MappingObservation.
func (in *Usb3MappingObservation) DeepCopy() *Usb3MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Usb3MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3MappingParameters) DeepCopyInto(out *Usb3MappingParameters) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3MappingParameters.
func (in *Usb3MappingParameters) DeepCopy() *Usb3MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Usb3MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3Observation) DeepCopyInto(out *Usb3Observation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb3DeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb3MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb3PortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb3SpiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3Observation.
func (in *Usb3Observation) DeepCopy() *Usb3Observation {
	if in == nil {
		return nil
	}
	out := new(Usb3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3Parameters) DeepCopyInto(out *Usb3Parameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb3DeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb3MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb3PortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb3SpiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3Parameters.
func (in *Usb3Parameters) DeepCopy() *Usb3Parameters {
	if in == nil {
		return nil
	}
	out := new(Usb3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3PortObservation) DeepCopyInto(out *Usb3PortObservation) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3PortObservation.
func (in *Usb3PortObservation) DeepCopy() *Usb3PortObservation {
	if in == nil {
		return nil
	}
	out := new(Usb3PortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3PortParameters) DeepCopyInto(out *Usb3PortParameters) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3PortParameters.
func (in *Usb3PortParameters) DeepCopy() *Usb3PortParameters {
	if in == nil {
		return nil
	}
	out := new(Usb3PortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3SpiceObservation) DeepCopyInto(out *Usb3SpiceObservation) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3SpiceObservation.
func (in *Usb3SpiceObservation) DeepCopy() *Usb3SpiceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb3SpiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb3SpiceParameters) DeepCopyInto(out *Usb3SpiceParameters) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb3SpiceParameters.
func (in *Usb3SpiceParameters) DeepCopy() *Usb3SpiceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb3SpiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4DeviceObservation) DeepCopyInto(out *Usb4DeviceObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4DeviceObservation.
func (in *Usb4DeviceObservation) DeepCopy() *Usb4DeviceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb4DeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4DeviceParameters) DeepCopyInto(out *Usb4DeviceParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4DeviceParameters.
func (in *Usb4DeviceParameters) DeepCopy() *Usb4DeviceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb4DeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4MappingObservation) DeepCopyInto(out *Usb4MappingObservation) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4MappingObservation.
func (in *Usb4MappingObservation) DeepCopy() *Usb4MappingObservation {
	if in == nil {
		return nil
	}
	out := new(Usb4MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4MappingParameters) DeepCopyInto(out *Usb4MappingParameters) {
	*out = *in
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4MappingParameters.
func (in *Usb4MappingParameters) DeepCopy() *Usb4MappingParameters {
	if in == nil {
		return nil
	}
	out := new(Usb4MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4Observation) DeepCopyInto(out *Usb4Observation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb4DeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb4MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb4PortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb4SpiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4Observation.
func (in *Usb4Observation) DeepCopy() *Usb4Observation {
	if in == nil {
		return nil
	}
	out := new(Usb4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4Parameters) DeepCopyInto(out *Usb4Parameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]Usb4DeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]Usb4MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]Usb4PortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spice != nil {
		in, out := &in.Spice, &out.Spice
		*out = make([]Usb4SpiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4Parameters.
func (in *Usb4Parameters) DeepCopy() *Usb4Parameters {
	if in == nil {
		return nil
	}
	out := new(Usb4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4PortObservation) DeepCopyInto(out *Usb4PortObservation) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4PortObservation.
func (in *Usb4PortObservation) DeepCopy() *Usb4PortObservation {
	if in == nil {
		return nil
	}
	out := new(Usb4PortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4PortParameters) DeepCopyInto(out *Usb4PortParameters) {
	*out = *in
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4PortParameters.
func (in *Usb4PortParameters) DeepCopy() *Usb4PortParameters {
	if in == nil {
		return nil
	}
	out := new(Usb4PortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4SpiceObservation) DeepCopyInto(out *Usb4SpiceObservation) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4SpiceObservation.
func (in *Usb4SpiceObservation) DeepCopy() *Usb4SpiceObservation {
	if in == nil {
		return nil
	}
	out := new(Usb4SpiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Usb4SpiceParameters) DeepCopyInto(out *Usb4SpiceParameters) {
	*out = *in
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Usb4SpiceParameters.
func (in *Usb4SpiceParameters) DeepCopy() *Usb4SpiceParameters {
	if in == nil {
		return nil
	}
	out := new(Usb4SpiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbObservation) DeepCopyInto(out *UsbObservation) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbObservation.
func (in *UsbObservation) DeepCopy() *UsbObservation {
	if in == nil {
		return nil
	}
	out := new(UsbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbParameters) DeepCopyInto(out *UsbParameters) {
	*out = *in
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.MappingID != nil {
		in, out := &in.MappingID, &out.MappingID
		*out = new(string)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbParameters.
func (in *UsbParameters) DeepCopy() *UsbParameters {
	if in == nil {
		return nil
	}
	out := new(UsbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbsObservation) DeepCopyInto(out *UsbsObservation) {
	*out = *in
	if in.Usb0 != nil {
		in, out := &in.Usb0, &out.Usb0
		*out = make([]Usb0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb1 != nil {
		in, out := &in.Usb1, &out.Usb1
		*out = make([]Usb1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb2 != nil {
		in, out := &in.Usb2, &out.Usb2
		*out = make([]Usb2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = make([]Usb3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb4 != nil {
		in, out := &in.Usb4, &out.Usb4
		*out = make([]Usb4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbsObservation.
func (in *UsbsObservation) DeepCopy() *UsbsObservation {
	if in == nil {
		return nil
	}
	out := new(UsbsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbsParameters) DeepCopyInto(out *UsbsParameters) {
	*out = *in
	if in.Usb0 != nil {
		in, out := &in.Usb0, &out.Usb0
		*out = make([]Usb0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb1 != nil {
		in, out := &in.Usb1, &out.Usb1
		*out = make([]Usb1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb2 != nil {
		in, out := &in.Usb2, &out.Usb2
		*out = make([]Usb2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = make([]Usb3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb4 != nil {
		in, out := &in.Usb4, &out.Usb4
		*out = make([]Usb4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbsParameters.
func (in *UsbsParameters) DeepCopy() *UsbsParameters {
	if in == nil {
		return nil
	}
	out := new(UsbsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaObservation) DeepCopyInto(out *VgaObservation) {
	*out = *in
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaObservation.
func (in *VgaObservation) DeepCopy() *VgaObservation {
	if in == nil {
		return nil
	}
	out := new(VgaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaParameters) DeepCopyInto(out *VgaParameters) {
	*out = *in
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaParameters.
func (in *VgaParameters) DeepCopy() *VgaParameters {
	if in == nil {
		return nil
	}
	out := new(VgaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0CdromObservation) DeepCopyInto(out *Virtio0CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0CdromObservation.
func (in *Virtio0CdromObservation) DeepCopy() *Virtio0CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio0CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0CdromParameters) DeepCopyInto(out *Virtio0CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0CdromParameters.
func (in *Virtio0CdromParameters) DeepCopy() *Virtio0CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0DiskObservation) DeepCopyInto(out *Virtio0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0DiskObservation.
func (in *Virtio0DiskObservation) DeepCopy() *Virtio0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0DiskParameters) DeepCopyInto(out *Virtio0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0DiskParameters.
func (in *Virtio0DiskParameters) DeepCopy() *Virtio0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0Observation) DeepCopyInto(out *Virtio0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio0CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio0PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0Observation.
func (in *Virtio0Observation) DeepCopy() *Virtio0Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0Parameters) DeepCopyInto(out *Virtio0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio0CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio0PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0Parameters.
func (in *Virtio0Parameters) DeepCopy() *Virtio0Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0PassthroughObservation) DeepCopyInto(out *Virtio0PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0PassthroughObservation.
func (in *Virtio0PassthroughObservation) DeepCopy() *Virtio0PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio0PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0PassthroughParameters) DeepCopyInto(out *Virtio0PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0PassthroughParameters.
func (in *Virtio0PassthroughParameters) DeepCopy() *Virtio0PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10CdromObservation) DeepCopyInto(out *Virtio10CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10CdromObservation.
func (in *Virtio10CdromObservation) DeepCopy() *Virtio10CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio10CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10CdromParameters) DeepCopyInto(out *Virtio10CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10CdromParameters.
func (in *Virtio10CdromParameters) DeepCopy() *Virtio10CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10DiskObservation) DeepCopyInto(out *Virtio10DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10DiskObservation.
func (in *Virtio10DiskObservation) DeepCopy() *Virtio10DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio10DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10DiskParameters) DeepCopyInto(out *Virtio10DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10DiskParameters.
func (in *Virtio10DiskParameters) DeepCopy() *Virtio10DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10Observation) DeepCopyInto(out *Virtio10Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio10CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio10DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio10PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10Observation.
func (in *Virtio10Observation) DeepCopy() *Virtio10Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio10Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10Parameters) DeepCopyInto(out *Virtio10Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio10CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio10DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio10PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10Parameters.
func (in *Virtio10Parameters) DeepCopy() *Virtio10Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10PassthroughObservation) DeepCopyInto(out *Virtio10PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10PassthroughObservation.
func (in *Virtio10PassthroughObservation) DeepCopy() *Virtio10PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio10PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10PassthroughParameters) DeepCopyInto(out *Virtio10PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10PassthroughParameters.
func (in *Virtio10PassthroughParameters) DeepCopy() *Virtio10PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11CdromObservation) DeepCopyInto(out *Virtio11CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11CdromObservation.
func (in *Virtio11CdromObservation) DeepCopy() *Virtio11CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio11CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11CdromParameters) DeepCopyInto(out *Virtio11CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11CdromParameters.
func (in *Virtio11CdromParameters) DeepCopy() *Virtio11CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11DiskObservation) DeepCopyInto(out *Virtio11DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11DiskObservation.
func (in *Virtio11DiskObservation) DeepCopy() *Virtio11DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio11DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11DiskParameters) DeepCopyInto(out *Virtio11DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11DiskParameters.
func (in *Virtio11DiskParameters) DeepCopy() *Virtio11DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11Observation) DeepCopyInto(out *Virtio11Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio11CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio11DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio11PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11Observation.
func (in *Virtio11Observation) DeepCopy() *Virtio11Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio11Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11Parameters) DeepCopyInto(out *Virtio11Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio11CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio11DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio11PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11Parameters.
func (in *Virtio11Parameters) DeepCopy() *Virtio11Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11PassthroughObservation) DeepCopyInto(out *Virtio11PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11PassthroughObservation.
func (in *Virtio11PassthroughObservation) DeepCopy() *Virtio11PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio11PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11PassthroughParameters) DeepCopyInto(out *Virtio11PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11PassthroughParameters.
func (in *Virtio11PassthroughParameters) DeepCopy() *Virtio11PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12CdromObservation) DeepCopyInto(out *Virtio12CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12CdromObservation.
func (in *Virtio12CdromObservation) DeepCopy() *Virtio12CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio12CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12CdromParameters) DeepCopyInto(out *Virtio12CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12CdromParameters.
func (in *Virtio12CdromParameters) DeepCopy() *Virtio12CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12DiskObservation) DeepCopyInto(out *Virtio12DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12DiskObservation.
func (in *Virtio12DiskObservation) DeepCopy() *Virtio12DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio12DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12DiskParameters) DeepCopyInto(out *Virtio12DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12DiskParameters.
func (in *Virtio12DiskParameters) DeepCopy() *Virtio12DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12Observation) DeepCopyInto(out *Virtio12Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio12CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio12DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio12PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12Observation.
func (in *Virtio12Observation) DeepCopy() *Virtio12Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio12Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12Parameters) DeepCopyInto(out *Virtio12Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio12CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio12DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio12PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12Parameters.
func (in *Virtio12Parameters) DeepCopy() *Virtio12Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12PassthroughObservation) DeepCopyInto(out *Virtio12PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12PassthroughObservation.
func (in *Virtio12PassthroughObservation) DeepCopy() *Virtio12PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio12PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12PassthroughParameters) DeepCopyInto(out *Virtio12PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12PassthroughParameters.
func (in *Virtio12PassthroughParameters) DeepCopy() *Virtio12PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13CdromObservation) DeepCopyInto(out *Virtio13CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13CdromObservation.
func (in *Virtio13CdromObservation) DeepCopy() *Virtio13CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio13CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13CdromParameters) DeepCopyInto(out *Virtio13CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13CdromParameters.
func (in *Virtio13CdromParameters) DeepCopy() *Virtio13CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13DiskObservation) DeepCopyInto(out *Virtio13DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13DiskObservation.
func (in *Virtio13DiskObservation) DeepCopy() *Virtio13DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio13DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13DiskParameters) DeepCopyInto(out *Virtio13DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13DiskParameters.
func (in *Virtio13DiskParameters) DeepCopy() *Virtio13DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13Observation) DeepCopyInto(out *Virtio13Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio13CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio13DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio13PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13Observation.
func (in *Virtio13Observation) DeepCopy() *Virtio13Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio13Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13Parameters) DeepCopyInto(out *Virtio13Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio13CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio13DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio13PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13Parameters.
func (in *Virtio13Parameters) DeepCopy() *Virtio13Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13PassthroughObservation) DeepCopyInto(out *Virtio13PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13PassthroughObservation.
func (in *Virtio13PassthroughObservation) DeepCopy() *Virtio13PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio13PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13PassthroughParameters) DeepCopyInto(out *Virtio13PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13PassthroughParameters.
func (in *Virtio13PassthroughParameters) DeepCopy() *Virtio13PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14CdromObservation) DeepCopyInto(out *Virtio14CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14CdromObservation.
func (in *Virtio14CdromObservation) DeepCopy() *Virtio14CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio14CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14CdromParameters) DeepCopyInto(out *Virtio14CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14CdromParameters.
func (in *Virtio14CdromParameters) DeepCopy() *Virtio14CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14DiskObservation) DeepCopyInto(out *Virtio14DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14DiskObservation.
func (in *Virtio14DiskObservation) DeepCopy() *Virtio14DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio14DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14DiskParameters) DeepCopyInto(out *Virtio14DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14DiskParameters.
func (in *Virtio14DiskParameters) DeepCopy() *Virtio14DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14Observation) DeepCopyInto(out *Virtio14Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio14CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio14DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio14PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14Observation.
func (in *Virtio14Observation) DeepCopy() *Virtio14Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio14Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14Parameters) DeepCopyInto(out *Virtio14Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio14CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio14DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio14PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14Parameters.
func (in *Virtio14Parameters) DeepCopy() *Virtio14Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14PassthroughObservation) DeepCopyInto(out *Virtio14PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14PassthroughObservation.
func (in *Virtio14PassthroughObservation) DeepCopy() *Virtio14PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio14PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14PassthroughParameters) DeepCopyInto(out *Virtio14PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14PassthroughParameters.
func (in *Virtio14PassthroughParameters) DeepCopy() *Virtio14PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15CdromObservation) DeepCopyInto(out *Virtio15CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15CdromObservation.
func (in *Virtio15CdromObservation) DeepCopy() *Virtio15CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio15CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15CdromParameters) DeepCopyInto(out *Virtio15CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15CdromParameters.
func (in *Virtio15CdromParameters) DeepCopy() *Virtio15CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15DiskObservation) DeepCopyInto(out *Virtio15DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15DiskObservation.
func (in *Virtio15DiskObservation) DeepCopy() *Virtio15DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio15DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15DiskParameters) DeepCopyInto(out *Virtio15DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15DiskParameters.
func (in *Virtio15DiskParameters) DeepCopy() *Virtio15DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15Observation) DeepCopyInto(out *Virtio15Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio15CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio15DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio15PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15Observation.
func (in *Virtio15Observation) DeepCopy() *Virtio15Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio15Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15Parameters) DeepCopyInto(out *Virtio15Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio15CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio15DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio15PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15Parameters.
func (in *Virtio15Parameters) DeepCopy() *Virtio15Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15PassthroughObservation) DeepCopyInto(out *Virtio15PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15PassthroughObservation.
func (in *Virtio15PassthroughObservation) DeepCopy() *Virtio15PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio15PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15PassthroughParameters) DeepCopyInto(out *Virtio15PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15PassthroughParameters.
func (in *Virtio15PassthroughParameters) DeepCopy() *Virtio15PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1CdromObservation) DeepCopyInto(out *Virtio1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1CdromObservation.
func (in *Virtio1CdromObservation) DeepCopy() *Virtio1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1CdromParameters) DeepCopyInto(out *Virtio1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1CdromParameters.
func (in *Virtio1CdromParameters) DeepCopy() *Virtio1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1DiskObservation) DeepCopyInto(out *Virtio1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1DiskObservation.
func (in *Virtio1DiskObservation) DeepCopy() *Virtio1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1DiskParameters) DeepCopyInto(out *Virtio1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1DiskParameters.
func (in *Virtio1DiskParameters) DeepCopy() *Virtio1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1Observation) DeepCopyInto(out *Virtio1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1Observation.
func (in *Virtio1Observation) DeepCopy() *Virtio1Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1Parameters) DeepCopyInto(out *Virtio1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1Parameters.
func (in *Virtio1Parameters) DeepCopy() *Virtio1Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1PassthroughObservation) DeepCopyInto(out *Virtio1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1PassthroughObservation.
func (in *Virtio1PassthroughObservation) DeepCopy() *Virtio1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1PassthroughParameters) DeepCopyInto(out *Virtio1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1PassthroughParameters.
func (in *Virtio1PassthroughParameters) DeepCopy() *Virtio1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2CdromObservation) DeepCopyInto(out *Virtio2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2CdromObservation.
func (in *Virtio2CdromObservation) DeepCopy() *Virtio2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2CdromParameters) DeepCopyInto(out *Virtio2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2CdromParameters.
func (in *Virtio2CdromParameters) DeepCopy() *Virtio2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2DiskObservation) DeepCopyInto(out *Virtio2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2DiskObservation.
func (in *Virtio2DiskObservation) DeepCopy() *Virtio2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2DiskParameters) DeepCopyInto(out *Virtio2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2DiskParameters.
func (in *Virtio2DiskParameters) DeepCopy() *Virtio2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2Observation) DeepCopyInto(out *Virtio2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2Observation.
func (in *Virtio2Observation) DeepCopy() *Virtio2Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2Parameters) DeepCopyInto(out *Virtio2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2Parameters.
func (in *Virtio2Parameters) DeepCopy() *Virtio2Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2PassthroughObservation) DeepCopyInto(out *Virtio2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2PassthroughObservation.
func (in *Virtio2PassthroughObservation) DeepCopy() *Virtio2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2PassthroughParameters) DeepCopyInto(out *Virtio2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2PassthroughParameters.
func (in *Virtio2PassthroughParameters) DeepCopy() *Virtio2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3CdromObservation) DeepCopyInto(out *Virtio3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3CdromObservation.
func (in *Virtio3CdromObservation) DeepCopy() *Virtio3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3CdromParameters) DeepCopyInto(out *Virtio3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3CdromParameters.
func (in *Virtio3CdromParameters) DeepCopy() *Virtio3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3DiskObservation) DeepCopyInto(out *Virtio3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3DiskObservation.
func (in *Virtio3DiskObservation) DeepCopy() *Virtio3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3DiskParameters) DeepCopyInto(out *Virtio3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3DiskParameters.
func (in *Virtio3DiskParameters) DeepCopy() *Virtio3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3Observation) DeepCopyInto(out *Virtio3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3Observation.
func (in *Virtio3Observation) DeepCopy() *Virtio3Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3Parameters) DeepCopyInto(out *Virtio3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3Parameters.
func (in *Virtio3Parameters) DeepCopy() *Virtio3Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3PassthroughObservation) DeepCopyInto(out *Virtio3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3PassthroughObservation.
func (in *Virtio3PassthroughObservation) DeepCopy() *Virtio3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3PassthroughParameters) DeepCopyInto(out *Virtio3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3PassthroughParameters.
func (in *Virtio3PassthroughParameters) DeepCopy() *Virtio3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4CdromObservation) DeepCopyInto(out *Virtio4CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4CdromObservation.
func (in *Virtio4CdromObservation) DeepCopy() *Virtio4CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio4CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4CdromParameters) DeepCopyInto(out *Virtio4CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4CdromParameters.
func (in *Virtio4CdromParameters) DeepCopy() *Virtio4CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4DiskObservation) DeepCopyInto(out *Virtio4DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4DiskObservation.
func (in *Virtio4DiskObservation) DeepCopy() *Virtio4DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio4DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4DiskParameters) DeepCopyInto(out *Virtio4DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4DiskParameters.
func (in *Virtio4DiskParameters) DeepCopy() *Virtio4DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4Observation) DeepCopyInto(out *Virtio4Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio4CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio4DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio4PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4Observation.
func (in *Virtio4Observation) DeepCopy() *Virtio4Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4Parameters) DeepCopyInto(out *Virtio4Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio4CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio4DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio4PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4Parameters.
func (in *Virtio4Parameters) DeepCopy() *Virtio4Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4PassthroughObservation) DeepCopyInto(out *Virtio4PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4PassthroughObservation.
func (in *Virtio4PassthroughObservation) DeepCopy() *Virtio4PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio4PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4PassthroughParameters) DeepCopyInto(out *Virtio4PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4PassthroughParameters.
func (in *Virtio4PassthroughParameters) DeepCopy() *Virtio4PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5CdromObservation) DeepCopyInto(out *Virtio5CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5CdromObservation.
func (in *Virtio5CdromObservation) DeepCopy() *Virtio5CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio5CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5CdromParameters) DeepCopyInto(out *Virtio5CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5CdromParameters.
func (in *Virtio5CdromParameters) DeepCopy() *Virtio5CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5DiskObservation) DeepCopyInto(out *Virtio5DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5DiskObservation.
func (in *Virtio5DiskObservation) DeepCopy() *Virtio5DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio5DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5DiskParameters) DeepCopyInto(out *Virtio5DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5DiskParameters.
func (in *Virtio5DiskParameters) DeepCopy() *Virtio5DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5Observation) DeepCopyInto(out *Virtio5Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio5CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio5DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio5PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5Observation.
func (in *Virtio5Observation) DeepCopy() *Virtio5Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5Parameters) DeepCopyInto(out *Virtio5Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio5CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio5DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio5PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5Parameters.
func (in *Virtio5Parameters) DeepCopy() *Virtio5Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5PassthroughObservation) DeepCopyInto(out *Virtio5PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5PassthroughObservation.
func (in *Virtio5PassthroughObservation) DeepCopy() *Virtio5PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio5PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5PassthroughParameters) DeepCopyInto(out *Virtio5PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5PassthroughParameters.
func (in *Virtio5PassthroughParameters) DeepCopy() *Virtio5PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6CdromObservation) DeepCopyInto(out *Virtio6CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6CdromObservation.
func (in *Virtio6CdromObservation) DeepCopy() *Virtio6CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio6CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6CdromParameters) DeepCopyInto(out *Virtio6CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6CdromParameters.
func (in *Virtio6CdromParameters) DeepCopy() *Virtio6CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6DiskObservation) DeepCopyInto(out *Virtio6DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6DiskObservation.
func (in *Virtio6DiskObservation) DeepCopy() *Virtio6DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio6DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6DiskParameters) DeepCopyInto(out *Virtio6DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6DiskParameters.
func (in *Virtio6DiskParameters) DeepCopy() *Virtio6DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6Observation) DeepCopyInto(out *Virtio6Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio6CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio6DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio6PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6Observation.
func (in *Virtio6Observation) DeepCopy() *Virtio6Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6Parameters) DeepCopyInto(out *Virtio6Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio6CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio6DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio6PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6Parameters.
func (in *Virtio6Parameters) DeepCopy() *Virtio6Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6PassthroughObservation) DeepCopyInto(out *Virtio6PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6PassthroughObservation.
func (in *Virtio6PassthroughObservation) DeepCopy() *Virtio6PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio6PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6PassthroughParameters) DeepCopyInto(out *Virtio6PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6PassthroughParameters.
func (in *Virtio6PassthroughParameters) DeepCopy() *Virtio6PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7CdromObservation) DeepCopyInto(out *Virtio7CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7CdromObservation.
func (in *Virtio7CdromObservation) DeepCopy() *Virtio7CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio7CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7CdromParameters) DeepCopyInto(out *Virtio7CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7CdromParameters.
func (in *Virtio7CdromParameters) DeepCopy() *Virtio7CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7DiskObservation) DeepCopyInto(out *Virtio7DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7DiskObservation.
func (in *Virtio7DiskObservation) DeepCopy() *Virtio7DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio7DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7DiskParameters) DeepCopyInto(out *Virtio7DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7DiskParameters.
func (in *Virtio7DiskParameters) DeepCopy() *Virtio7DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7Observation) DeepCopyInto(out *Virtio7Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio7CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio7DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio7PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7Observation.
func (in *Virtio7Observation) DeepCopy() *Virtio7Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio7Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7Parameters) DeepCopyInto(out *Virtio7Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio7CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio7DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio7PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7Parameters.
func (in *Virtio7Parameters) DeepCopy() *Virtio7Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7PassthroughObservation) DeepCopyInto(out *Virtio7PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7PassthroughObservation.
func (in *Virtio7PassthroughObservation) DeepCopy() *Virtio7PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio7PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7PassthroughParameters) DeepCopyInto(out *Virtio7PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7PassthroughParameters.
func (in *Virtio7PassthroughParameters) DeepCopy() *Virtio7PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8CdromObservation) DeepCopyInto(out *Virtio8CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8CdromObservation.
func (in *Virtio8CdromObservation) DeepCopy() *Virtio8CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio8CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8CdromParameters) DeepCopyInto(out *Virtio8CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8CdromParameters.
func (in *Virtio8CdromParameters) DeepCopy() *Virtio8CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8DiskObservation) DeepCopyInto(out *Virtio8DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8DiskObservation.
func (in *Virtio8DiskObservation) DeepCopy() *Virtio8DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio8DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8DiskParameters) DeepCopyInto(out *Virtio8DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8DiskParameters.
func (in *Virtio8DiskParameters) DeepCopy() *Virtio8DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8Observation) DeepCopyInto(out *Virtio8Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio8CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio8DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio8PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8Observation.
func (in *Virtio8Observation) DeepCopy() *Virtio8Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio8Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8Parameters) DeepCopyInto(out *Virtio8Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio8CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio8DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio8PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8Parameters.
func (in *Virtio8Parameters) DeepCopy() *Virtio8Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8PassthroughObservation) DeepCopyInto(out *Virtio8PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8PassthroughObservation.
func (in *Virtio8PassthroughObservation) DeepCopy() *Virtio8PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio8PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8PassthroughParameters) DeepCopyInto(out *Virtio8PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8PassthroughParameters.
func (in *Virtio8PassthroughParameters) DeepCopy() *Virtio8PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9CdromObservation) DeepCopyInto(out *Virtio9CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9CdromObservation.
func (in *Virtio9CdromObservation) DeepCopy() *Virtio9CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio9CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9CdromParameters) DeepCopyInto(out *Virtio9CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9CdromParameters.
func (in *Virtio9CdromParameters) DeepCopy() *Virtio9CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9DiskObservation) DeepCopyInto(out *Virtio9DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9DiskObservation.
func (in *Virtio9DiskObservation) DeepCopy() *Virtio9DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio9DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9DiskParameters) DeepCopyInto(out *Virtio9DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9DiskParameters.
func (in *Virtio9DiskParameters) DeepCopy() *Virtio9DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9Observation) DeepCopyInto(out *Virtio9Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio9CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio9DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio9PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9Observation.
func (in *Virtio9Observation) DeepCopy() *Virtio9Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio9Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9Parameters) DeepCopyInto(out *Virtio9Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio9CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio9DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio9PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9Parameters.
func (in *Virtio9Parameters) DeepCopy() *Virtio9Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9PassthroughObservation) DeepCopyInto(out *Virtio9PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9PassthroughObservation.
func (in *Virtio9PassthroughObservation) DeepCopy() *Virtio9PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio9PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9PassthroughParameters) DeepCopyInto(out *Virtio9PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9PassthroughParameters.
func (in *Virtio9PassthroughParameters) DeepCopy() *Virtio9PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtioObservation) DeepCopyInto(out *VirtioObservation) {
	*out = *in
	if in.Virtio0 != nil {
		in, out := &in.Virtio0, &out.Virtio0
		*out = make([]Virtio0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio1 != nil {
		in, out := &in.Virtio1, &out.Virtio1
		*out = make([]Virtio1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio10 != nil {
		in, out := &in.Virtio10, &out.Virtio10
		*out = make([]Virtio10Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio11 != nil {
		in, out := &in.Virtio11, &out.Virtio11
		*out = make([]Virtio11Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio12 != nil {
		in, out := &in.Virtio12, &out.Virtio12
		*out = make([]Virtio12Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio13 != nil {
		in, out := &in.Virtio13, &out.Virtio13
		*out = make([]Virtio13Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio14 != nil {
		in, out := &in.Virtio14, &out.Virtio14
		*out = make([]Virtio14Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio15 != nil {
		in, out := &in.Virtio15, &out.Virtio15
		*out = make([]Virtio15Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio2 != nil {
		in, out := &in.Virtio2, &out.Virtio2
		*out = make([]Virtio2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio3 != nil {
		in, out := &in.Virtio3, &out.Virtio3
		*out = make([]Virtio3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio4 != nil {
		in, out := &in.Virtio4, &out.Virtio4
		*out = make([]Virtio4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio5 != nil {
		in, out := &in.Virtio5, &out.Virtio5
		*out = make([]Virtio5Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio6 != nil {
		in, out := &in.Virtio6, &out.Virtio6
		*out = make([]Virtio6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio7 != nil {
		in, out := &in.Virtio7, &out.Virtio7
		*out = make([]Virtio7Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio8 != nil {
		in, out := &in.Virtio8, &out.Virtio8
		*out = make([]Virtio8Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio9 != nil {
		in, out := &in.Virtio9, &out.Virtio9
		*out = make([]Virtio9Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtioObservation.
func (in *VirtioObservation) DeepCopy() *VirtioObservation {
	if in == nil {
		return nil
	}
	out := new(VirtioObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtioParameters) DeepCopyInto(out *VirtioParameters) {
	*out = *in
	if in.Virtio0 != nil {
		in, out := &in.Virtio0, &out.Virtio0
		*out = make([]Virtio0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio1 != nil {
		in, out := &in.Virtio1, &out.Virtio1
		*out = make([]Virtio1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio10 != nil {
		in, out := &in.Virtio10, &out.Virtio10
		*out = make([]Virtio10Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio11 != nil {
		in, out := &in.Virtio11, &out.Virtio11
		*out = make([]Virtio11Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio12 != nil {
		in, out := &in.Virtio12, &out.Virtio12
		*out = make([]Virtio12Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio13 != nil {
		in, out := &in.Virtio13, &out.Virtio13
		*out = make([]Virtio13Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio14 != nil {
		in, out := &in.Virtio14, &out.Virtio14
		*out = make([]Virtio14Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio15 != nil {
		in, out := &in.Virtio15, &out.Virtio15
		*out = make([]Virtio15Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio2 != nil {
		in, out := &in.Virtio2, &out.Virtio2
		*out = make([]Virtio2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio3 != nil {
		in, out := &in.Virtio3, &out.Virtio3
		*out = make([]Virtio3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio4 != nil {
		in, out := &in.Virtio4, &out.Virtio4
		*out = make([]Virtio4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio5 != nil {
		in, out := &in.Virtio5, &out.Virtio5
		*out = make([]Virtio5Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio6 != nil {
		in, out := &in.Virtio6, &out.Virtio6
		*out = make([]Virtio6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio7 != nil {
		in, out := &in.Virtio7, &out.Virtio7
		*out = make([]Virtio7Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio8 != nil {
		in, out := &in.Virtio8, &out.Virtio8
		*out = make([]Virtio8Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio9 != nil {
		in, out := &in.Virtio9, &out.Virtio9
		*out = make([]Virtio9Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtioParameters.
func (in *VirtioParameters) DeepCopy() *VirtioParameters {
	if in == nil {
		return nil
	}
	out := new(VirtioParameters)
	in.DeepCopyInto(out)
	return out
}
